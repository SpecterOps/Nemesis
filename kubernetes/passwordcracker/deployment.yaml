apiVersion: apps/v1
kind: Deployment
metadata:
  name: passwordcracker
  labels:
    app: passwordcracker
    component: enrichment-pipeline
spec:
  replicas: 1
  selector:
    matchLabels:
      app: passwordcracker
  strategy: {}
  template:
    metadata:
      labels:
        app: passwordcracker
        component: enrichment-pipeline
    spec:
      containers:
        - env:
            - name: ASSESSMENT_ID
              valueFrom:
                configMapKeyRef:
                  name: operation-config
                  key: assessment-id
            - name: CRACK_WORDLIST_TOP_WORDS
              value: "10000"
            - name: DATA_DOWNLOAD_DIR
              value: "/tmp"
            - name: DISABLE_ALERTING
              value: "False"
            - name: ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: operation-config
                  key: environment
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: operation-config
                  key: log-level
            - name: NEMESIS_HTTP_SERVER
              valueFrom:
                configMapKeyRef:
                  name: operation-config
                  key: nemesis-http-server
            - name: PROMETHEUS_DISABLE_CREATED_SERIES
              value: "True"
            - name: PROMETHEUS_PORT
              value: "9090"
            - name: PUBLIC_NEMESIS_URL
              value: "$(NEMESIS_HTTP_SERVER)dashboard/"
            - name: PUBLIC_KIBANA_URL
              value: "$(NEMESIS_HTTP_SERVER)kibana/"
            - name: RABBITMQ_CONNECTION_URI
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-creds
                  key: rabbitmq-connectionuri
            - name: SLACK_CHANNEL
              valueFrom:
                configMapKeyRef:
                  name: operation-config
                  key: slack-alert-channel
            - name: SLACK_WEBHOOK_URL
              valueFrom:
                secretKeyRef:
                  name: operation-creds
                  key: slack_web_hook
            - name: SLACK_USERNAME
              value: Nemesis
            - name: SLACK_EMOJI
              value: ":smiling_imp:"

          image: nemesis-passwordcracker
          imagePullPolicy: IfNotPresent
          name: nemesis-passwordcracker
          ports:
            - containerPort: 9090
              name: prometheus
          resources:
            requests:
              cpu: "100m"
            limits:
              cpu: "2000m"
          # Removing probes for now since cracking jobs can consume all CPU and stop the webserver from responding
          # readinessProbe:
          #   httpGet:
          #     path: /metrics
          #     port: prometheus
          #   initialDelaySeconds: 5
          #   periodSeconds: 5
          #   timeoutSeconds: 60
          #   failureThreshold: 10

      restartPolicy: Always
status: {}
