apiVersion: apps/v1
kind: Deployment
metadata:
  name: nlp
  labels:
    app: nlp
    component: enrichment-pipeline
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nlp
  strategy: {}
  template:
    metadata:
      labels:
        app: nlp
        component: enrichment-pipeline
    spec:
      containers:
        - env:
            - name: ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: operation-config
                  key: environment
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: operation-config
                  key: log-level
            - name: PROMETHEUS_PORT
              value: "8000"
            - name: PROMETHEUS_DISABLE_CREATED_SERIES
              value: "True"
            - name: ASSESSMENT_ID
              valueFrom:
                configMapKeyRef:
                  name: operation-config
                  key: assessment-id
            - name: AWS_BUCKET
              valueFrom:
                configMapKeyRef:
                  name: aws-config
                  key: aws-bucket
            - name: AWS_DEFAULT_REGION
              valueFrom:
                configMapKeyRef:
                  name: aws-config
                  key: aws-default-region
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-creds
                  key: aws_access_key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-creds
                  key: aws_secret_key
            - name: AWS_KMS_KEY_ALIAS
              valueFrom:
                configMapKeyRef:
                  name: aws-config
                  key: aws-kms-key-alias
            - name: DATA_DOWNLOAD_DIR
              value: "/tmp"

            - name: STORAGE_PROVIDER
              valueFrom:
                configMapKeyRef:
                  name: operation-config
                  key: storage_provider
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: minio-creds
                  key: minio_root_user
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: minio-creds
                  key: minio_root_password

            - name: RABBITMQ_CONNECTION_URI
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-creds
                  key: rabbitmq-connectionuri
            - name: ELASTIC_INDEX_NAME
              value: "text_embeddings"
            - name: EMBEDDING_MODEL
              value: "sentence-transformers/all-MiniLM-L6-v2"
            - name: ELASTICSEARCH_URL
              value: http://nemesis-es-internal-http:9200/
            - name: ELASTICSEARCH_USER
              valueFrom:
                secretKeyRef:
                  name: elasticsearch-users
                  key: username
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elasticsearch-users
                  key: password
            - name: ELASTIC_CONNECTION_URI
              value: "http://$(ELASTICSEARCH_USER):$(ELASTICSEARCH_PASSWORD)@nemesis-es-internal-http:9200"

          image: nemesis-nlp
          imagePullPolicy: IfNotPresent
          name: nemesis-nlp
          ports:
            - containerPort: 9803
              name: nlp-http
            # - containerPort: 9801
            #   name: dotnet-prom
          resources: {}
          readinessProbe:
            httpGet:
              path: /ready
              port: nlp-http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 10

      restartPolicy: Always
status: {}
