[tool.poetry]
name = "enrichment"
version = "0.1.0"
description = ""
authors = ["SpecterOps <info@specterops.io>"]
packages = [{ include = "enrichment" }]

[tool.poetry.scripts]
app = "enrichment.__main__:main"

[tool.poetry.dependencies]
python = "^3.11.2"
protobuf = "^4.21.5"
types-protobuf = "^3.20.0"
typing-extensions = "^4.4.0"
nemesispb = { path = "../../packages/python/nemesispb", develop = true }
nemesiscommon = { path = "../../packages/python/nemesiscommon", develop = true }
prometheus-async = { extras = ["aiohttp"], version = "^22.2.0" }
elasticsearch = "^8.6.2"
aiohttp = "^3.9.3"
httpx = "^0.23.3"
asyncpg = "^0.27.0"
winacl = "^0.1.7"
jsonlines = "^3.1.0"
aioboto3 = "^10.4.0"
impacket = "^0.10.0"
fastapi = "^0.109.2"
uvicorn = { extras = ["standard"], version = "^0.18.3" }
numpy = "^1.23.2"
python-magic = "^0.4.27"
pefile = "^2022.5.30"
dnfile = "^0.12.0"
yara-python = "^4.2.3"
plyara = "^2.1.1"
olefile = "^0.46"
binaryornot = "^0.4.4"
lief = "^0.12.1"
py7zr = "^0.20.4"
pypdf = "^3.5.2"
colorama = "^0.4.6"
python-multipart = "^0.0.6"
rich = "^13.3.3"
structlog = "^23.1.0"
aiosqlite = "^0.19.0"
dependency-injector = "^4.41.0"
python-libarchive = "^4.2.1"
lnkparse3 = "^1.2.0"
pycryptodome = "^3.18.0"
python-registry = "^1.3.1"
anyascii = "^0.3.2"
aiofiles = "^23.2.1"
streaming-form-data = "^1.15.0"

[tool.poetry.dev-dependencies]
pytest = "^7.1.2"
black = "^22.6.0"
flake8 = "^5.0.4"
mypy = "^0.971"

[tool.poetry.group.dev.dependencies]
pytest-asyncio = "^0.20.3"
pytest-mock = "^3.10.0"
bandit = "^1.7.5"
pyright = "^1.1.302"
asyncpg-stubs = "^0.27.0"
flake8-cognitive-complexity = "^0.1.0"
debugpy = "^1.6.7"
watchdog = {extras = ["watchmedo"], version = "^3.0.0"}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
import_heading_stdlib = "Standard Libraries"
import_heading_firstparty = "Nemesis Libraries"
import_heading_thirdparty = "3rd Party Libraries"
profile = "black"
extra_standard_library = "asgiref"
known_first_party = "nemesis"
src_paths = ["isort", "test"]
line_length = 90
use_parentheses = true
multi_line_output = 3
include_trailing_comma = true
ensure_newline_before_comments = true
sections = [
    "FUTURE",
    "STDLIB",
    "DJANGO",
    "THIRDPARTY",
    "FIRSTPARTY",
    "LOCALFOLDER",
]

# [tool.pyright]
# Using pyrightconfig.json instead since pyproject.toml has 2nd class
# support in VS code: https://github.com/microsoft/pyright/issues/694#issuecomment-823778235

[tool.black]
line-length = 240
