"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _VerificationFlags:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _VerificationFlagsEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_VerificationFlags.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    OK: _VerificationFlags.ValueType  # 0
    INVALID_SIGNER: _VerificationFlags.ValueType  # 1
    UNSUPPORTED_ALGORITHM: _VerificationFlags.ValueType  # 2
    INCONSISTENT_DIGEST_ALGORITHM: _VerificationFlags.ValueType  # 4
    CERT_NOT_FOUND: _VerificationFlags.ValueType  # 8
    CORRUPTED_CONTENT_INFO: _VerificationFlags.ValueType  # 16
    CORRUPTED_AUTH_DATA: _VerificationFlags.ValueType  # 32
    MISSING_PKCS9_MESSAGE_DIGEST: _VerificationFlags.ValueType  # 64
    BAD_DIGEST: _VerificationFlags.ValueType  # 128
    NO_SIGNATURE: _VerificationFlags.ValueType  # 512
    BAD_SIGNATURE: _VerificationFlags.ValueType  # 256
    CERT_EXPIRED: _VerificationFlags.ValueType  # 1024
    CERT_FUTURE: _VerificationFlags.ValueType  # 2048

class VerificationFlags(_VerificationFlags, metaclass=_VerificationFlagsEnumTypeWrapper):
    """Used in Pe - TODO: combine into one block?"""

OK: VerificationFlags.ValueType  # 0
INVALID_SIGNER: VerificationFlags.ValueType  # 1
UNSUPPORTED_ALGORITHM: VerificationFlags.ValueType  # 2
INCONSISTENT_DIGEST_ALGORITHM: VerificationFlags.ValueType  # 4
CERT_NOT_FOUND: VerificationFlags.ValueType  # 8
CORRUPTED_CONTENT_INFO: VerificationFlags.ValueType  # 16
CORRUPTED_AUTH_DATA: VerificationFlags.ValueType  # 32
MISSING_PKCS9_MESSAGE_DIGEST: VerificationFlags.ValueType  # 64
BAD_DIGEST: VerificationFlags.ValueType  # 128
NO_SIGNATURE: VerificationFlags.ValueType  # 512
BAD_SIGNATURE: VerificationFlags.ValueType  # 256
CERT_EXPIRED: VerificationFlags.ValueType  # 1024
CERT_FUTURE: VerificationFlags.ValueType  # 2048
global___VerificationFlags = VerificationFlags

@typing_extensions.final
class Error(google.protobuf.message.Message):
    """//////////////////////////////////////////////////

    General messages

    //////////////////////////////////////////////////

    Generic Error message
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ERROR_FIELD_NUMBER: builtins.int
    error: builtins.str
    def __init__(
        self,
        *,
        error: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["error", b"error"]) -> None: ...

global___Error = Error

@typing_extensions.final
class Alert(google.protobuf.message.Message):
    """Used by containers to signal the "alerting" container"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TYPE_FIELD_NUMBER: builtins.int
    TEXT_FIELD_NUMBER: builtins.int
    ORIGINATING_SERVICE_FIELD_NUMBER: builtins.int
    type: builtins.str
    """Currently just "slack" """
    text: builtins.str
    """Text to send for the alert"""
    originating_service: builtins.str
    """The service the message originated from (optional)"""
    def __init__(
        self,
        *,
        type: builtins.str = ...,
        text: builtins.str = ...,
        originating_service: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["originating_service", b"originating_service", "text", b"text", "type", b"type"]) -> None: ...

global___Alert = Alert

@typing_extensions.final
class Metadata(google.protobuf.message.Message):
    """//////////////////////////////////////////////////

    Nemesis API Ingestion Messages

    //////////////////////////////////////////////////

    Metadata header that's send with every message to the API
    ODR: defined in README.md
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AGENT_ID_FIELD_NUMBER: builtins.int
    AGENT_TYPE_FIELD_NUMBER: builtins.int
    AUTOMATED_FIELD_NUMBER: builtins.int
    DATA_TYPE_FIELD_NUMBER: builtins.int
    SOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    TIMESTAMP_FIELD_NUMBER: builtins.int
    EXPIRATION_FIELD_NUMBER: builtins.int
    MESSAGE_ID_FIELD_NUMBER: builtins.int
    agent_id: builtins.str
    """Name or unique identifier for an agent"""
    agent_type: builtins.str
    """Name of the type of agent (ex. beacon)"""
    automated: builtins.bool
    """If the submission was automatically or manually sent"""
    data_type: builtins.str
    """Name of the ODR the body must conform to"""
    source: builtins.str
    """The semi-unique source for the data
     For host-related data_types, this is the hostname
     For network-related data_types, this is the network name
     For AD-related data_types, this is the full qualified domain name
    """
    project: builtins.str
    """Name or unique identifier for a project"""
    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time the C2 platform sent the data to the ODS"""
    @property
    def expiration(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time the data should be removed from the ODS"""
    message_id: builtins.str
    """Name or unique identifier for a message"""
    def __init__(
        self,
        *,
        agent_id: builtins.str = ...,
        agent_type: builtins.str = ...,
        automated: builtins.bool = ...,
        data_type: builtins.str = ...,
        source: builtins.str = ...,
        project: builtins.str = ...,
        timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        expiration: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        message_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["expiration", b"expiration", "timestamp", b"timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["agent_id", b"agent_id", "agent_type", b"agent_type", "automated", b"automated", "data_type", b"data_type", "expiration", b"expiration", "message_id", b"message_id", "project", b"project", "source", b"source", "timestamp", b"timestamp"]) -> None: ...

global___Metadata = Metadata

@typing_extensions.final
class MetadataHeader(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___Metadata: ...
    def __init__(
        self,
        *,
        metadata: global___Metadata | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> None: ...

global___MetadataHeader = MetadataHeader

@typing_extensions.final
class AuthenticationDataIngestion(google.protobuf.message.Message):
    """Data that may be used to authenticate to a resource. The resource does not
    need to be accessible over a network and a local resource may be specified
    using the file:// scheme in the URI parameter. The type data may be anything
    that may be used to authenticate such as a password, certificate, JWT, SAML
    token, TGT, NTLM hash, private key, etc. The authentication data does not
    need to be additionally encoded because all ODR string parameters already
    support hex encoding values.
    ODR: `authentication_data`, defined in docs/odr/references/authentication_data.md
       See authentication_data.md for supported "type" values.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATA_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    IS_FILE_FIELD_NUMBER: builtins.int
    URI_FIELD_NUMBER: builtins.int
    USERNAME_FIELD_NUMBER: builtins.int
    NOTES_FIELD_NUMBER: builtins.int
    ORIGINATING_OBJECT_ID_FIELD_NUMBER: builtins.int
    data: builtins.str
    """Case sensitive data or a Nemesis UUID reference (if over 1k)"""
    type: builtins.str
    """type of the authentication data"""
    is_file: builtins.bool
    """Boolean for if data is a reference to a binary submission"""
    uri: builtins.str
    """Location of where the data is valid"""
    username: builtins.str
    """Simple or FQDN username"""
    notes: builtins.str
    """any additional notes/context"""
    originating_object_id: builtins.str
    """the Nemesis UUID referencing the original file the hash was extracted from (if applicable)"""
    def __init__(
        self,
        *,
        data: builtins.str = ...,
        type: builtins.str = ...,
        is_file: builtins.bool = ...,
        uri: builtins.str = ...,
        username: builtins.str = ...,
        notes: builtins.str = ...,
        originating_object_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "is_file", b"is_file", "notes", b"notes", "originating_object_id", b"originating_object_id", "type", b"type", "uri", b"uri", "username", b"username"]) -> None: ...

global___AuthenticationDataIngestion = AuthenticationDataIngestion

@typing_extensions.final
class AuthenticationDataIngestionMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___Metadata: ...
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AuthenticationDataIngestion]: ...
    def __init__(
        self,
        *,
        metadata: global___Metadata | None = ...,
        data: collections.abc.Iterable[global___AuthenticationDataIngestion] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "metadata", b"metadata"]) -> None: ...

global___AuthenticationDataIngestionMessage = AuthenticationDataIngestionMessage

@typing_extensions.final
class FileDataIngestion(google.protobuf.message.Message):
    """The content of a specific file system resource. The path must be in a UNC,
    file system, or mapped path format. File system and mapped paths must be
    absolute and use forward slashes for separators (e.g. /). Paths are expected
    to be canonicalized but there is no verification of this.
    ODR: `file_data`, defined in file_data.md
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OBJECT_ID_FIELD_NUMBER: builtins.int
    PATH_FIELD_NUMBER: builtins.int
    SIZE_FIELD_NUMBER: builtins.int
    ORIGINATING_OBJECT_ID_FIELD_NUMBER: builtins.int
    object_id: builtins.str
    """Nemesis UUID referring to the uploaded file"""
    path: builtins.str
    """Case sensitive file path"""
    size: builtins.int
    """Size of the file, in bytes"""
    originating_object_id: builtins.str
    """If the file was extracted from another existing file in Nemesis (e.g., a zip or jar),
      this optional field is the Nemesis UUID referencing the original file
    """
    def __init__(
        self,
        *,
        object_id: builtins.str = ...,
        path: builtins.str = ...,
        size: builtins.int = ...,
        originating_object_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["object_id", b"object_id", "originating_object_id", b"originating_object_id", "path", b"path", "size", b"size"]) -> None: ...

global___FileDataIngestion = FileDataIngestion

@typing_extensions.final
class FileDataIngestionMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___Metadata: ...
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FileDataIngestion]: ...
    def __init__(
        self,
        *,
        metadata: global___Metadata | None = ...,
        data: collections.abc.Iterable[global___FileDataIngestion] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "metadata", b"metadata"]) -> None: ...

global___FileDataIngestionMessage = FileDataIngestionMessage

@typing_extensions.final
class FileInformationIngestion(google.protobuf.message.Message):
    """Information about a specific file system resource. Note that file_info is
    more specialized than the path_list submission which may include information
    about non-file system resources (ex. registry paths). The path must be in a
    UNC, file system, or mapped path format. File system and mapped paths must be
    absolute and use forward slashes for separators (e.g. /). Paths are expected
    to be canonicalized but there is no verification of this. Submission
    parameters may accommodate files from most operating systems. The only
    submission parameters that are required is the file path and type. Note that
    all date time parameters in ODRs including for the modified, access, and
    creation times for Windows files are expected to be UTC.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PATH_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    SIZE_FIELD_NUMBER: builtins.int
    CREATION_TIME_FIELD_NUMBER: builtins.int
    ACCESS_TIME_FIELD_NUMBER: builtins.int
    MODIFICATION_TIME_FIELD_NUMBER: builtins.int
    ACCESS_MODE_FIELD_NUMBER: builtins.int
    GROUP_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    OWNER_FIELD_NUMBER: builtins.int
    SDDL_FIELD_NUMBER: builtins.int
    VERSION_INFO_FIELD_NUMBER: builtins.int
    path: builtins.str
    """case sensitive file path"""
    type: builtins.str
    """case insensitive full name of file type
       currently: file, folder, share
    """
    size: builtins.int
    """size in bytes"""
    @property
    def creation_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """file creation time in UTC"""
    @property
    def access_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """file last access time in UTC"""
    @property
    def modification_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """file modification time in UTC"""
    access_mode: builtins.int
    """*nix permission number"""
    group: builtins.str
    """*nix case sensitive file group membership"""
    id: builtins.str
    """*nix string for an inode or file id"""
    owner: builtins.str
    """case sensitive owner (*nix and Windows)"""
    sddl: builtins.str
    """case sensitive Windows permission string"""
    version_info: builtins.str
    """optional Windows VersionInfo fields"""
    def __init__(
        self,
        *,
        path: builtins.str = ...,
        type: builtins.str = ...,
        size: builtins.int = ...,
        creation_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        access_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        modification_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        access_mode: builtins.int = ...,
        group: builtins.str = ...,
        id: builtins.str = ...,
        owner: builtins.str = ...,
        sddl: builtins.str = ...,
        version_info: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["access_time", b"access_time", "creation_time", b"creation_time", "modification_time", b"modification_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["access_mode", b"access_mode", "access_time", b"access_time", "creation_time", b"creation_time", "group", b"group", "id", b"id", "modification_time", b"modification_time", "owner", b"owner", "path", b"path", "sddl", b"sddl", "size", b"size", "type", b"type", "version_info", b"version_info"]) -> None: ...

global___FileInformationIngestion = FileInformationIngestion

@typing_extensions.final
class FileInformationIngestionMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___Metadata: ...
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FileInformationIngestion]: ...
    def __init__(
        self,
        *,
        metadata: global___Metadata | None = ...,
        data: collections.abc.Iterable[global___FileInformationIngestion] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "metadata", b"metadata"]) -> None: ...

global___FileInformationIngestionMessage = FileInformationIngestionMessage

@typing_extensions.final
class Principal(google.protobuf.message.Message):
    """Used in ProcessIngestion"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    sid: builtins.str
    """Security identifier, if known"""
    name: builtins.str
    """Name of the principal, if known. The format should be the Down-Level Logon Name (e.g., DOMAIN\\user)"""
    def __init__(
        self,
        *,
        sid: builtins.str = ...,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name", b"name", "sid", b"sid"]) -> None: ...

global___Principal = Principal

@typing_extensions.final
class Token(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _TokenType:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _TokenTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Token._TokenType.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        TOKENTYPE_UNSPECIFIED: Token._TokenType.ValueType  # 0
        TOKENTYPE_PRIMARY: Token._TokenType.ValueType  # 1
        TOKENTYPE_IMPERSONATION: Token._TokenType.ValueType  # 2

    class TokenType(_TokenType, metaclass=_TokenTypeEnumTypeWrapper): ...
    TOKENTYPE_UNSPECIFIED: Token.TokenType.ValueType  # 0
    TOKENTYPE_PRIMARY: Token.TokenType.ValueType  # 1
    TOKENTYPE_IMPERSONATION: Token.TokenType.ValueType  # 2

    class _ImpersonationLevel:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _ImpersonationLevelEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Token._ImpersonationLevel.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        IMPERSONATIONLEVEL_UNSPECIFIED: Token._ImpersonationLevel.ValueType  # 0
        IMPERSONATIONLEVEL_ANONYMOUS: Token._ImpersonationLevel.ValueType  # 1
        IMPERSONATIONLEVEL_IDENTIFICATION: Token._ImpersonationLevel.ValueType  # 2
        IMPERSONATIONLEVEL_IMPERSONATION: Token._ImpersonationLevel.ValueType  # 3
        IMPERSONATIONLEVEL_DELEGATION: Token._ImpersonationLevel.ValueType  # 4

    class ImpersonationLevel(_ImpersonationLevel, metaclass=_ImpersonationLevelEnumTypeWrapper): ...
    IMPERSONATIONLEVEL_UNSPECIFIED: Token.ImpersonationLevel.ValueType  # 0
    IMPERSONATIONLEVEL_ANONYMOUS: Token.ImpersonationLevel.ValueType  # 1
    IMPERSONATIONLEVEL_IDENTIFICATION: Token.ImpersonationLevel.ValueType  # 2
    IMPERSONATIONLEVEL_IMPERSONATION: Token.ImpersonationLevel.ValueType  # 3
    IMPERSONATIONLEVEL_DELEGATION: Token.ImpersonationLevel.ValueType  # 4

    @typing_extensions.final
    class TokenPrivilege(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        PRIVILEGE_NAME_FIELD_NUMBER: builtins.int
        ENABLED_FIELD_NUMBER: builtins.int
        privilege_name: builtins.str
        """Privilege name (e.g., SeDebugPrivilege)"""
        enabled: builtins.bool
        """Is the privileged enabled"""
        def __init__(
            self,
            *,
            privilege_name: builtins.str = ...,
            enabled: builtins.bool = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["enabled", b"enabled", "privilege_name", b"privilege_name"]) -> None: ...

    USER_FIELD_NUMBER: builtins.int
    GROUPS_FIELD_NUMBER: builtins.int
    PRIVILEGES_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    IMPERSONATION_LEVEL_FIELD_NUMBER: builtins.int
    SESSION_FIELD_NUMBER: builtins.int
    @property
    def user(self) -> global___Principal: ...
    @property
    def groups(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Principal]: ...
    @property
    def privileges(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Token.TokenPrivilege]: ...
    type: global___Token.TokenType.ValueType
    impersonation_level: global___Token.ImpersonationLevel.ValueType
    session: builtins.int
    def __init__(
        self,
        *,
        user: global___Principal | None = ...,
        groups: collections.abc.Iterable[global___Principal] | None = ...,
        privileges: collections.abc.Iterable[global___Token.TokenPrivilege] | None = ...,
        type: global___Token.TokenType.ValueType = ...,
        impersonation_level: global___Token.ImpersonationLevel.ValueType = ...,
        session: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user", b"user"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["groups", b"groups", "impersonation_level", b"impersonation_level", "privileges", b"privileges", "session", b"session", "type", b"type", "user", b"user"]) -> None: ...

global___Token = Token

@typing_extensions.final
class ProcessIngestion(google.protobuf.message.Message):
    """Information about the currently running processes for the host the agent is
    running on. The file_name parameter must be in a UNC, file system, or mapped
    path format. File system and mapped paths must be absolute and use forward
    slashes for separators (e.g. /). Paths are expected to be canonicalized but
    there is no verification of this. Submission parameters may accommodate
    processes information for most operating systems. The only submission
    parameter that is required is the process id. Note that all start time
    parameters are expected to be from the Unix epoch.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    COMMAND_LINE_FIELD_NUMBER: builtins.int
    FILE_NAME_FIELD_NUMBER: builtins.int
    PROCESS_ID_FIELD_NUMBER: builtins.int
    PARENT_PROCESS_ID_FIELD_NUMBER: builtins.int
    ARCH_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    MEMORY_FIELD_NUMBER: builtins.int
    TOKEN_FIELD_NUMBER: builtins.int
    name: builtins.str
    """The name of the process"""
    command_line: builtins.str
    """The current command line information"""
    file_name: builtins.str
    """If known, the file that was executed"""
    process_id: builtins.int
    """Process id"""
    parent_process_id: builtins.int
    """Parent process id"""
    arch: builtins.str
    """Architecture of the process"""
    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """When the process was started"""
    memory: builtins.int
    """The amount of memory used by the process, in bytes"""
    @property
    def token(self) -> global___Token:
        """If present, Windows token information"""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        command_line: builtins.str = ...,
        file_name: builtins.str = ...,
        process_id: builtins.int = ...,
        parent_process_id: builtins.int = ...,
        arch: builtins.str = ...,
        start_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        memory: builtins.int = ...,
        token: global___Token | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["start_time", b"start_time", "token", b"token"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["arch", b"arch", "command_line", b"command_line", "file_name", b"file_name", "memory", b"memory", "name", b"name", "parent_process_id", b"parent_process_id", "process_id", b"process_id", "start_time", b"start_time", "token", b"token"]) -> None: ...

global___ProcessIngestion = ProcessIngestion

@typing_extensions.final
class ProcessIngestionMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___Metadata: ...
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ProcessIngestion]: ...
    def __init__(
        self,
        *,
        metadata: global___Metadata | None = ...,
        data: collections.abc.Iterable[global___ProcessIngestion] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "metadata", b"metadata"]) -> None: ...

global___ProcessIngestionMessage = ProcessIngestionMessage

@typing_extensions.final
class RawDataIngestion(google.protobuf.message.Message):
    """Data that may consist of anything. Developers and operators may use this type
    to push arbitrary data to the ODS to take advantage of any builtin or custom
    automated post processing the ODS performs. Example use cases include daily
    status reports, C2 logs, and other data that may be unique to the workflow of
    a team.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TAGS_FIELD_NUMBER: builtins.int
    IS_FILE_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """User defined case insensitive keywords"""
    is_file: builtins.bool
    """Boolean for if data is a reference to a binary submission"""
    data: builtins.str
    """Raw data or a UUID reference to data in the ODS"""
    def __init__(
        self,
        *,
        tags: collections.abc.Iterable[builtins.str] | None = ...,
        is_file: builtins.bool = ...,
        data: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "is_file", b"is_file", "tags", b"tags"]) -> None: ...

global___RawDataIngestion = RawDataIngestion

@typing_extensions.final
class RawDataIngestionMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___Metadata: ...
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RawDataIngestion]: ...
    def __init__(
        self,
        *,
        metadata: global___Metadata | None = ...,
        data: collections.abc.Iterable[global___RawDataIngestion] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "metadata", b"metadata"]) -> None: ...

global___RawDataIngestionMessage = RawDataIngestionMessage

@typing_extensions.final
class RegistryValueIngestion(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _RegistryValueKind:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _RegistryValueKindEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[RegistryValueIngestion._RegistryValueKind.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNKNOWN: RegistryValueIngestion._RegistryValueKind.ValueType  # 0
        STRING: RegistryValueIngestion._RegistryValueKind.ValueType  # 1
        EXPAND_STRING: RegistryValueIngestion._RegistryValueKind.ValueType  # 2
        BINARY: RegistryValueIngestion._RegistryValueKind.ValueType  # 3
        DWORD: RegistryValueIngestion._RegistryValueKind.ValueType  # 4
        DWORD_BIG_ENDIAN: RegistryValueIngestion._RegistryValueKind.ValueType  # 5
        LINK: RegistryValueIngestion._RegistryValueKind.ValueType  # 6
        MULTI_STRING: RegistryValueIngestion._RegistryValueKind.ValueType  # 7
        QWORD: RegistryValueIngestion._RegistryValueKind.ValueType  # 11

    class RegistryValueKind(_RegistryValueKind, metaclass=_RegistryValueKindEnumTypeWrapper): ...
    UNKNOWN: RegistryValueIngestion.RegistryValueKind.ValueType  # 0
    STRING: RegistryValueIngestion.RegistryValueKind.ValueType  # 1
    EXPAND_STRING: RegistryValueIngestion.RegistryValueKind.ValueType  # 2
    BINARY: RegistryValueIngestion.RegistryValueKind.ValueType  # 3
    DWORD: RegistryValueIngestion.RegistryValueKind.ValueType  # 4
    DWORD_BIG_ENDIAN: RegistryValueIngestion.RegistryValueKind.ValueType  # 5
    LINK: RegistryValueIngestion.RegistryValueKind.ValueType  # 6
    MULTI_STRING: RegistryValueIngestion.RegistryValueKind.ValueType  # 7
    QWORD: RegistryValueIngestion.RegistryValueKind.ValueType  # 11

    KEY_FIELD_NUMBER: builtins.int
    VALUE_NAME_FIELD_NUMBER: builtins.int
    VALUE_KIND_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    SDDL_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    key: builtins.str
    """Case-sensitive absolute registry key path. Use backslashes for separators (e.g. `HKLM\\Software`)
    This is the only required field since without it the others do not make sense.Alert
    If all other fields aren't present, this indicates that the key exists and may or may not have values.
    """
    value_name: builtins.str
    """(optional) Case sensitive value name. Set this to the empty string to indicate a key's default value."""
    value_kind: global___RegistryValueIngestion.RegistryValueKind.ValueType
    """(optional) Type of the registry value"""
    value: builtins.str
    """(optional) string representation of the value"""
    sddl: builtins.str
    """(optional) string SDDL representation of key's security descriptor"""
    tags: builtins.str
    """(optional) string comma separated tags for the registry key"""
    def __init__(
        self,
        *,
        key: builtins.str = ...,
        value_name: builtins.str | None = ...,
        value_kind: global___RegistryValueIngestion.RegistryValueKind.ValueType | None = ...,
        value: builtins.str | None = ...,
        sddl: builtins.str | None = ...,
        tags: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_sddl", b"_sddl", "_tags", b"_tags", "_value", b"_value", "_value_kind", b"_value_kind", "_value_name", b"_value_name", "sddl", b"sddl", "tags", b"tags", "value", b"value", "value_kind", b"value_kind", "value_name", b"value_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_sddl", b"_sddl", "_tags", b"_tags", "_value", b"_value", "_value_kind", b"_value_kind", "_value_name", b"_value_name", "key", b"key", "sddl", b"sddl", "tags", b"tags", "value", b"value", "value_kind", b"value_kind", "value_name", b"value_name"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_sddl", b"_sddl"]) -> typing_extensions.Literal["sddl"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_tags", b"_tags"]) -> typing_extensions.Literal["tags"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_value", b"_value"]) -> typing_extensions.Literal["value"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_value_kind", b"_value_kind"]) -> typing_extensions.Literal["value_kind"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_value_name", b"_value_name"]) -> typing_extensions.Literal["value_name"] | None: ...

global___RegistryValueIngestion = RegistryValueIngestion

@typing_extensions.final
class RegistryValueIngestionMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___Metadata: ...
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RegistryValueIngestion]: ...
    def __init__(
        self,
        *,
        metadata: global___Metadata | None = ...,
        data: collections.abc.Iterable[global___RegistryValueIngestion] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "metadata", b"metadata"]) -> None: ...

global___RegistryValueIngestionMessage = RegistryValueIngestionMessage

@typing_extensions.final
class PathListIngestion(google.protobuf.message.Message):
    """Child listings for a specified path. The path must be in a UNC, URI, file
    system, or mapped path format. File system and mapped paths must be absolute
    and use forward slashes for separators (e.g. /). Paths are expected to be
    canonicalized but there is no verification of this. The mapped file format
    may be used to specify a registry keys as well using PowerShell convention of
    specifying the hive name as the drive (ex. HKLM:).
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PATH_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    path: builtins.str
    """Case sensitive resource path"""
    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Case sensitive child items"""
    def __init__(
        self,
        *,
        path: builtins.str = ...,
        items: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["items", b"items", "path", b"path"]) -> None: ...

global___PathListIngestion = PathListIngestion

@typing_extensions.final
class PathListIngestionMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___Metadata: ...
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PathListIngestion]: ...
    def __init__(
        self,
        *,
        metadata: global___Metadata | None = ...,
        data: collections.abc.Iterable[global___PathListIngestion] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "metadata", b"metadata"]) -> None: ...

global___PathListIngestionMessage = PathListIngestionMessage

@typing_extensions.final
class ServiceIngestion(google.protobuf.message.Message):
    """Information about Windows services."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    START_NAME_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    START_MODE_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    SERVICE_COMMAND_FIELD_NUMBER: builtins.int
    SERVICE_DLL_FIELD_NUMBER: builtins.int
    SERVICE_SDDL_FIELD_NUMBER: builtins.int
    name: builtins.str
    """Case sensitive service name."""
    display_name: builtins.str
    """Case sensitive service display name."""
    description: builtins.str
    """Case sensitive service description"""
    start_name: builtins.str
    """Case sensitive username the service starts as"""
    state: builtins.str
    """Case insensitive state of the service (running, stopped, etc.)"""
    start_mode: builtins.str
    """Case insensitive start mode of the service (automatic, disabled, etc.)"""
    type: builtins.str
    """Case insensitive type of the service."""
    service_command: builtins.str
    """Case sensitive, quote-escaped, binary path of the serbice binary + any arguments"""
    service_dll: builtins.str
    """Case sensitive file path of the service DLL being loaded into SVCHOST"""
    service_sddl: builtins.str
    """Case sensitive Windows permission string"""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        display_name: builtins.str = ...,
        description: builtins.str = ...,
        start_name: builtins.str = ...,
        state: builtins.str = ...,
        start_mode: builtins.str = ...,
        type: builtins.str = ...,
        service_command: builtins.str = ...,
        service_dll: builtins.str = ...,
        service_sddl: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["description", b"description", "display_name", b"display_name", "name", b"name", "service_command", b"service_command", "service_dll", b"service_dll", "service_sddl", b"service_sddl", "start_mode", b"start_mode", "start_name", b"start_name", "state", b"state", "type", b"type"]) -> None: ...

global___ServiceIngestion = ServiceIngestion

@typing_extensions.final
class ServiceIngestionMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___Metadata: ...
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ServiceIngestion]: ...
    def __init__(
        self,
        *,
        metadata: global___Metadata | None = ...,
        data: collections.abc.Iterable[global___ServiceIngestion] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "metadata", b"metadata"]) -> None: ...

global___ServiceIngestionMessage = ServiceIngestionMessage

@typing_extensions.final
class NamedPipeIngestion(google.protobuf.message.Message):
    """Information about Windows named pipes."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    SERVER_PROCESS_NAME_FIELD_NUMBER: builtins.int
    SERVER_PROCESS_ID_FIELD_NUMBER: builtins.int
    SERVER_PROCESS_PATH_FIELD_NUMBER: builtins.int
    SDDL_FIELD_NUMBER: builtins.int
    name: builtins.str
    """Case sensitive name."""
    server_process_name: builtins.str
    """Name of the server process that for named pipe, if known"""
    server_process_id: builtins.int
    """PID of the server process that for named pipe, if known"""
    server_process_path: builtins.str
    """Path of the server process that for named pipe, if known"""
    sddl: builtins.str
    """Case sensitive Windows permission string"""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        server_process_name: builtins.str = ...,
        server_process_id: builtins.int = ...,
        server_process_path: builtins.str = ...,
        sddl: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name", b"name", "sddl", b"sddl", "server_process_id", b"server_process_id", "server_process_name", b"server_process_name", "server_process_path", b"server_process_path"]) -> None: ...

global___NamedPipeIngestion = NamedPipeIngestion

@typing_extensions.final
class NamedPipeIngestionMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___Metadata: ...
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NamedPipeIngestion]: ...
    def __init__(
        self,
        *,
        metadata: global___Metadata | None = ...,
        data: collections.abc.Iterable[global___NamedPipeIngestion] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "metadata", b"metadata"]) -> None: ...

global___NamedPipeIngestionMessage = NamedPipeIngestionMessage

@typing_extensions.final
class CookieIngestion(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_DATA_DIRECTORY_FIELD_NUMBER: builtins.int
    DOMAIN_FIELD_NUMBER: builtins.int
    PATH_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    VALUE_ENC_FIELD_NUMBER: builtins.int
    EXPIRES_FIELD_NUMBER: builtins.int
    CREATION_FIELD_NUMBER: builtins.int
    LAST_ACCESS_FIELD_NUMBER: builtins.int
    LAST_UPDATE_FIELD_NUMBER: builtins.int
    SECURE_FIELD_NUMBER: builtins.int
    HTTP_ONLY_FIELD_NUMBER: builtins.int
    SESSION_FIELD_NUMBER: builtins.int
    SAMESITE_FIELD_NUMBER: builtins.int
    SOURCE_PORT_FIELD_NUMBER: builtins.int
    user_data_directory: builtins.str
    """Path of the user data folder, if known."""
    domain: builtins.str
    """Domain/host_key for the cookie"""
    path: builtins.str
    """Path on the domain for the cookie."""
    name: builtins.str
    """Name of the cookie value."""
    value: builtins.str
    """Plaintext decrypted cookie value (if decrypted)."""
    value_enc: builtins.str
    """Base64 encoding of encrypted value bytes."""
    @property
    def expires(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Timestamp of when the cookie expires."""
    @property
    def creation(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Timestamp of when the cookie was created."""
    @property
    def last_access(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Timestamp of when the cookie was last accessed."""
    @property
    def last_update(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Timestamp of when the cookie was last updated."""
    secure: builtins.bool
    """True/1 if the cookie can only be accessed by the server."""
    http_only: builtins.bool
    """True/1 if the cookie can only be accessed by the server."""
    session: builtins.bool
    """True if the cookie is deleted when the user closes their browser."""
    samesite: builtins.str
    """STRICT/LAX/NONE, protection against CSRF attacks."""
    source_port: builtins.int
    """The port number of the source origin."""
    def __init__(
        self,
        *,
        user_data_directory: builtins.str = ...,
        domain: builtins.str = ...,
        path: builtins.str = ...,
        name: builtins.str = ...,
        value: builtins.str = ...,
        value_enc: builtins.str = ...,
        expires: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        creation: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        last_access: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        last_update: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        secure: builtins.bool = ...,
        http_only: builtins.bool = ...,
        session: builtins.bool = ...,
        samesite: builtins.str = ...,
        source_port: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["creation", b"creation", "expires", b"expires", "last_access", b"last_access", "last_update", b"last_update"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["creation", b"creation", "domain", b"domain", "expires", b"expires", "http_only", b"http_only", "last_access", b"last_access", "last_update", b"last_update", "name", b"name", "path", b"path", "samesite", b"samesite", "secure", b"secure", "session", b"session", "source_port", b"source_port", "user_data_directory", b"user_data_directory", "value", b"value", "value_enc", b"value_enc"]) -> None: ...

global___CookieIngestion = CookieIngestion

@typing_extensions.final
class CookieIngestionMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___Metadata: ...
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CookieIngestion]: ...
    def __init__(
        self,
        *,
        metadata: global___Metadata | None = ...,
        data: collections.abc.Iterable[global___CookieIngestion] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "metadata", b"metadata"]) -> None: ...

global___CookieIngestionMessage = CookieIngestionMessage

@typing_extensions.final
class NetworkConnectionIngestion(google.protobuf.message.Message):
    """Connections between the host the agent is running with itself or another
    host. These could also be listening ports (i.e., netstat output)
    Addresses are expected to conform to the public standard for the address
    type but there is no verification of this as well.
    As an example, ethernet addresses are expected to use a hyphen as a separator
    instead of a colon as per IEEE 802.3 but this is not verified.

    The protocol list and matching source and destination lists represent the
    protocol stack used for a connection. The lists only need to represent a
    portion of the protocol stack and do not need to represent the entirety of
    it. The lists allow the ODR to be reused for any connection type an operator
    may be interested in without having to make a new ODR for each new connection
    type.

    local_address is treated as source, remote_address is treated as destination
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOCAL_ADDRESS_FIELD_NUMBER: builtins.int
    REMOTE_ADDRESS_FIELD_NUMBER: builtins.int
    PROTOCOL_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    PROCESS_ID_FIELD_NUMBER: builtins.int
    PROCESS_NAME_FIELD_NUMBER: builtins.int
    SERVICE_FIELD_NUMBER: builtins.int
    local_address: builtins.str
    """Local/source address for the connection"""
    remote_address: builtins.str
    """Remote/destination address for the connection"""
    protocol: builtins.str
    """Protocol specification ("tcp,ipv4", "udp,ipv4", "tcp,ipv6", etc.)"""
    state: builtins.str
    """Optional - case insensitive state of the connection (e.g., listen, established, etc.)"""
    process_id: builtins.int
    """Optional - process ID handling the connection"""
    process_name: builtins.str
    """Optional - process name/command line handling the connection"""
    service: builtins.str
    """Optional - service name handling the connection"""
    def __init__(
        self,
        *,
        local_address: builtins.str = ...,
        remote_address: builtins.str = ...,
        protocol: builtins.str = ...,
        state: builtins.str = ...,
        process_id: builtins.int = ...,
        process_name: builtins.str = ...,
        service: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["local_address", b"local_address", "process_id", b"process_id", "process_name", b"process_name", "protocol", b"protocol", "remote_address", b"remote_address", "service", b"service", "state", b"state"]) -> None: ...

global___NetworkConnectionIngestion = NetworkConnectionIngestion

@typing_extensions.final
class NetworkConnectionIngestionMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___Metadata: ...
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NetworkConnectionIngestion]: ...
    def __init__(
        self,
        *,
        metadata: global___Metadata | None = ...,
        data: collections.abc.Iterable[global___NetworkConnectionIngestion] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "metadata", b"metadata"]) -> None: ...

global___NetworkConnectionIngestionMessage = NetworkConnectionIngestionMessage

@typing_extensions.final
class SlackWorkspaces(google.protobuf.message.Message):
    """//////////////////////////////////////////////////

    file_data parsed file format messages

    //////////////////////////////////////////////////
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class SlackWorkspace(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        USERNAME_FIELD_NUMBER: builtins.int
        WORKSPACE_ID_FIELD_NUMBER: builtins.int
        WORKSPACE_DOMAIN_FIELD_NUMBER: builtins.int
        WORKSPACE_NAME_FIELD_NUMBER: builtins.int
        WORKSPACE_ICON_URL_FIELD_NUMBER: builtins.int
        username: builtins.str
        workspace_id: builtins.str
        workspace_domain: builtins.str
        workspace_name: builtins.str
        workspace_icon_url: builtins.str
        def __init__(
            self,
            *,
            username: builtins.str = ...,
            workspace_id: builtins.str = ...,
            workspace_domain: builtins.str = ...,
            workspace_name: builtins.str = ...,
            workspace_icon_url: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["username", b"username", "workspace_domain", b"workspace_domain", "workspace_icon_url", b"workspace_icon_url", "workspace_id", b"workspace_id", "workspace_name", b"workspace_name"]) -> None: ...

    WORKSPACES_FIELD_NUMBER: builtins.int
    @property
    def workspaces(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SlackWorkspaces.SlackWorkspace]: ...
    def __init__(
        self,
        *,
        workspaces: collections.abc.Iterable[global___SlackWorkspaces.SlackWorkspace] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["workspaces", b"workspaces"]) -> None: ...

global___SlackWorkspaces = SlackWorkspaces

@typing_extensions.final
class SlackDownloads(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class SlackDownload(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        USERNAME_FIELD_NUMBER: builtins.int
        WORKSPACE_ID_FIELD_NUMBER: builtins.int
        DOWNLOAD_ID_FIELD_NUMBER: builtins.int
        TEAM_ID_FIELD_NUMBER: builtins.int
        USER_ID_FIELD_NUMBER: builtins.int
        URL_FIELD_NUMBER: builtins.int
        DOWNLOAD_PATH_FIELD_NUMBER: builtins.int
        DOWNLOAD_STATE_FIELD_NUMBER: builtins.int
        START_TIME_FIELD_NUMBER: builtins.int
        END_TIME_FIELD_NUMBER: builtins.int
        username: builtins.str
        workspace_id: builtins.str
        download_id: builtins.str
        team_id: builtins.str
        user_id: builtins.str
        url: builtins.str
        download_path: builtins.str
        download_state: builtins.str
        @property
        def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
        @property
        def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
        def __init__(
            self,
            *,
            username: builtins.str = ...,
            workspace_id: builtins.str = ...,
            download_id: builtins.str = ...,
            team_id: builtins.str = ...,
            user_id: builtins.str = ...,
            url: builtins.str = ...,
            download_path: builtins.str = ...,
            download_state: builtins.str = ...,
            start_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
            end_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["end_time", b"end_time", "start_time", b"start_time"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["download_id", b"download_id", "download_path", b"download_path", "download_state", b"download_state", "end_time", b"end_time", "start_time", b"start_time", "team_id", b"team_id", "url", b"url", "user_id", b"user_id", "username", b"username", "workspace_id", b"workspace_id"]) -> None: ...

    DOWNLOADS_FIELD_NUMBER: builtins.int
    @property
    def downloads(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SlackDownloads.SlackDownload]: ...
    def __init__(
        self,
        *,
        downloads: collections.abc.Iterable[global___SlackDownloads.SlackDownload] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["downloads", b"downloads"]) -> None: ...

global___SlackDownloads = SlackDownloads

@typing_extensions.final
class Lnk(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TARGET_FIELD_NUMBER: builtins.int
    WORKING_DIRECTORY_FIELD_NUMBER: builtins.int
    COMMAND_LINE_ARGUMENTS_FIELD_NUMBER: builtins.int
    MACHINE_IDENTIFIER_FIELD_NUMBER: builtins.int
    COMMENT_FIELD_NUMBER: builtins.int
    TARGET_FILE_SIZE_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    RUN_AS_ADMIN_FIELD_NUMBER: builtins.int
    CREATION_TIME_FIELD_NUMBER: builtins.int
    ACCESSED_TIME_FIELD_NUMBER: builtins.int
    MODIFIED_TIME_FIELD_NUMBER: builtins.int
    target: builtins.str
    working_directory: builtins.str
    command_line_arguments: builtins.str
    machine_identifier: builtins.str
    comment: builtins.str
    target_file_size: builtins.int
    location: builtins.str
    """"local" or "remote" """
    run_as_admin: builtins.bool
    @property
    def creation_time(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def accessed_time(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def modified_time(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        target: builtins.str = ...,
        working_directory: builtins.str = ...,
        command_line_arguments: builtins.str = ...,
        machine_identifier: builtins.str = ...,
        comment: builtins.str = ...,
        target_file_size: builtins.int = ...,
        location: builtins.str = ...,
        run_as_admin: builtins.bool = ...,
        creation_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        accessed_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        modified_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["accessed_time", b"accessed_time", "creation_time", b"creation_time", "modified_time", b"modified_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["accessed_time", b"accessed_time", "command_line_arguments", b"command_line_arguments", "comment", b"comment", "creation_time", b"creation_time", "location", b"location", "machine_identifier", b"machine_identifier", "modified_time", b"modified_time", "run_as_admin", b"run_as_admin", "target", b"target", "target_file_size", b"target_file_size", "working_directory", b"working_directory"]) -> None: ...

global___Lnk = Lnk

@typing_extensions.final
class Passwd(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class PasswdEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        USERNAME_FIELD_NUMBER: builtins.int
        USER_ID_FIELD_NUMBER: builtins.int
        GROUP_ID_FIELD_NUMBER: builtins.int
        HOME_DIRECTORY_FIELD_NUMBER: builtins.int
        SHELL_FIELD_NUMBER: builtins.int
        username: builtins.str
        user_id: builtins.str
        group_id: builtins.str
        home_directory: builtins.str
        shell: builtins.str
        def __init__(
            self,
            *,
            username: builtins.str = ...,
            user_id: builtins.str = ...,
            group_id: builtins.str = ...,
            home_directory: builtins.str = ...,
            shell: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["group_id", b"group_id", "home_directory", b"home_directory", "shell", b"shell", "user_id", b"user_id", "username", b"username"]) -> None: ...

    ENTRIES_FIELD_NUMBER: builtins.int
    @property
    def entries(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Passwd.PasswdEntry]: ...
    def __init__(
        self,
        *,
        entries: collections.abc.Iterable[global___Passwd.PasswdEntry] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["entries", b"entries"]) -> None: ...

global___Passwd = Passwd

@typing_extensions.final
class Shadow(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class ShadowEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        USERNAME_FIELD_NUMBER: builtins.int
        PASSWORD_LAST_CHANGED_FIELD_NUMBER: builtins.int
        PASSWORD_FIELD_NUMBER: builtins.int
        username: builtins.str
        @property
        def password_last_changed(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
        password: builtins.str
        def __init__(
            self,
            *,
            username: builtins.str = ...,
            password_last_changed: google.protobuf.timestamp_pb2.Timestamp | None = ...,
            password: builtins.str = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["password_last_changed", b"password_last_changed"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["password", b"password", "password_last_changed", b"password_last_changed", "username", b"username"]) -> None: ...

    ENTRIES_FIELD_NUMBER: builtins.int
    @property
    def entries(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Shadow.ShadowEntry]: ...
    def __init__(
        self,
        *,
        entries: collections.abc.Iterable[global___Shadow.ShadowEntry] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["entries", b"entries"]) -> None: ...

global___Shadow = Shadow

@typing_extensions.final
class OfficeDocOle(google.protobuf.message.Message):
    """.doc/.ppt/.xls/etc."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TITLE_FIELD_NUMBER: builtins.int
    CREATOR_FIELD_NUMBER: builtins.int
    CREATED_FIELD_NUMBER: builtins.int
    MODIFIED_FIELD_NUMBER: builtins.int
    KEYWORDS_FIELD_NUMBER: builtins.int
    COMMENTS_FIELD_NUMBER: builtins.int
    LAST_MODIFIED_BY_FIELD_NUMBER: builtins.int
    SUBJECT_FIELD_NUMBER: builtins.int
    CREATING_APPLICATION_FIELD_NUMBER: builtins.int
    TOTAL_EDIT_TIME_FIELD_NUMBER: builtins.int
    NUM_PAGES_FIELD_NUMBER: builtins.int
    NUM_SLIDES_FIELD_NUMBER: builtins.int
    NUM_CHARS_FIELD_NUMBER: builtins.int
    IS_ENCRYPTED_FIELD_NUMBER: builtins.int
    ENCRYPTION_HASH_FIELD_NUMBER: builtins.int
    title: builtins.str
    creator: builtins.str
    @property
    def created(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def modified(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    keywords: builtins.str
    comments: builtins.str
    last_modified_by: builtins.str
    subject: builtins.str
    creating_application: builtins.str
    total_edit_time: builtins.int
    num_pages: builtins.int
    num_slides: builtins.int
    num_chars: builtins.int
    is_encrypted: builtins.bool
    encryption_hash: builtins.str
    """office2john hash representing the document password"""
    def __init__(
        self,
        *,
        title: builtins.str = ...,
        creator: builtins.str = ...,
        created: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        modified: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        keywords: builtins.str = ...,
        comments: builtins.str = ...,
        last_modified_by: builtins.str = ...,
        subject: builtins.str = ...,
        creating_application: builtins.str = ...,
        total_edit_time: builtins.int = ...,
        num_pages: builtins.int = ...,
        num_slides: builtins.int = ...,
        num_chars: builtins.int = ...,
        is_encrypted: builtins.bool = ...,
        encryption_hash: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_encryption_hash", b"_encryption_hash", "created", b"created", "encryption_hash", b"encryption_hash", "modified", b"modified"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_encryption_hash", b"_encryption_hash", "comments", b"comments", "created", b"created", "creating_application", b"creating_application", "creator", b"creator", "encryption_hash", b"encryption_hash", "is_encrypted", b"is_encrypted", "keywords", b"keywords", "last_modified_by", b"last_modified_by", "modified", b"modified", "num_chars", b"num_chars", "num_pages", b"num_pages", "num_slides", b"num_slides", "subject", b"subject", "title", b"title", "total_edit_time", b"total_edit_time"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_encryption_hash", b"_encryption_hash"]) -> typing_extensions.Literal["encryption_hash"] | None: ...

global___OfficeDocOle = OfficeDocOle

@typing_extensions.final
class OfficeDocNew(google.protobuf.message.Message):
    """.docx/.pptx/.xlsx/etc."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TITLE_FIELD_NUMBER: builtins.int
    CREATOR_FIELD_NUMBER: builtins.int
    CREATED_FIELD_NUMBER: builtins.int
    MODIFIED_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    KEYWORDS_FIELD_NUMBER: builtins.int
    LAST_MODIFIED_BY_FIELD_NUMBER: builtins.int
    SUBJECT_FIELD_NUMBER: builtins.int
    REVISION_FIELD_NUMBER: builtins.int
    IS_ENCRYPTED_FIELD_NUMBER: builtins.int
    ENCRYPTION_HASH_FIELD_NUMBER: builtins.int
    title: builtins.str
    creator: builtins.str
    @property
    def created(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def modified(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    description: builtins.str
    keywords: builtins.str
    last_modified_by: builtins.str
    subject: builtins.str
    revision: builtins.int
    is_encrypted: builtins.bool
    encryption_hash: builtins.str
    """office2john hash representing the document password"""
    def __init__(
        self,
        *,
        title: builtins.str = ...,
        creator: builtins.str = ...,
        created: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        modified: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        description: builtins.str = ...,
        keywords: builtins.str = ...,
        last_modified_by: builtins.str = ...,
        subject: builtins.str = ...,
        revision: builtins.int = ...,
        is_encrypted: builtins.bool = ...,
        encryption_hash: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_encryption_hash", b"_encryption_hash", "created", b"created", "encryption_hash", b"encryption_hash", "modified", b"modified"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_encryption_hash", b"_encryption_hash", "created", b"created", "creator", b"creator", "description", b"description", "encryption_hash", b"encryption_hash", "is_encrypted", b"is_encrypted", "keywords", b"keywords", "last_modified_by", b"last_modified_by", "modified", b"modified", "revision", b"revision", "subject", b"subject", "title", b"title"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_encryption_hash", b"_encryption_hash"]) -> typing_extensions.Literal["encryption_hash"] | None: ...

global___OfficeDocNew = OfficeDocNew

@typing_extensions.final
class Pdf(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NUM_PAGES_FIELD_NUMBER: builtins.int
    TITLE_FIELD_NUMBER: builtins.int
    AUTHOR_FIELD_NUMBER: builtins.int
    SUBJECT_FIELD_NUMBER: builtins.int
    CREATOR_FIELD_NUMBER: builtins.int
    PRODUCER_FIELD_NUMBER: builtins.int
    CREATED_FIELD_NUMBER: builtins.int
    MODIFIED_FIELD_NUMBER: builtins.int
    KEYWORDS_FIELD_NUMBER: builtins.int
    IS_ENCRYPTED_FIELD_NUMBER: builtins.int
    ENCRYPTION_HASH_FIELD_NUMBER: builtins.int
    num_pages: builtins.int
    title: builtins.str
    author: builtins.str
    subject: builtins.str
    creator: builtins.str
    producer: builtins.str
    @property
    def created(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def modified(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def keywords(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    is_encrypted: builtins.bool
    encryption_hash: builtins.str
    """pdf2john hash representing the document password"""
    def __init__(
        self,
        *,
        num_pages: builtins.int = ...,
        title: builtins.str = ...,
        author: builtins.str = ...,
        subject: builtins.str = ...,
        creator: builtins.str = ...,
        producer: builtins.str = ...,
        created: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        modified: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        keywords: collections.abc.Iterable[builtins.str] | None = ...,
        is_encrypted: builtins.bool = ...,
        encryption_hash: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_encryption_hash", b"_encryption_hash", "created", b"created", "encryption_hash", b"encryption_hash", "modified", b"modified"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_encryption_hash", b"_encryption_hash", "author", b"author", "created", b"created", "creator", b"creator", "encryption_hash", b"encryption_hash", "is_encrypted", b"is_encrypted", "keywords", b"keywords", "modified", b"modified", "num_pages", b"num_pages", "producer", b"producer", "subject", b"subject", "title", b"title"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_encryption_hash", b"_encryption_hash"]) -> typing_extensions.Literal["encryption_hash"] | None: ...

global___Pdf = Pdf

@typing_extensions.final
class GroupPolicyPreferences(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class GroupPolicyPreferencesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        USERNAME_FIELD_NUMBER: builtins.int
        CPASSWORD_FIELD_NUMBER: builtins.int
        PASSWORD_FIELD_NUMBER: builtins.int
        NEWNAME_FIELD_NUMBER: builtins.int
        DESCRIPTION_FIELD_NUMBER: builtins.int
        CHANGED_FIELD_NUMBER: builtins.int
        ACTION_FIELD_NUMBER: builtins.int
        DISABLED_FIELD_NUMBER: builtins.int
        NEVER_EXPIRES_FIELD_NUMBER: builtins.int
        username: builtins.str
        cpassword: builtins.str
        password: builtins.str
        newname: builtins.str
        description: builtins.str
        @property
        def changed(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
        action: builtins.str
        disabled: builtins.bool
        never_expires: builtins.bool
        def __init__(
            self,
            *,
            username: builtins.str = ...,
            cpassword: builtins.str = ...,
            password: builtins.str = ...,
            newname: builtins.str = ...,
            description: builtins.str = ...,
            changed: google.protobuf.timestamp_pb2.Timestamp | None = ...,
            action: builtins.str = ...,
            disabled: builtins.bool = ...,
            never_expires: builtins.bool = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["changed", b"changed"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "changed", b"changed", "cpassword", b"cpassword", "description", b"description", "disabled", b"disabled", "never_expires", b"never_expires", "newname", b"newname", "password", b"password", "username", b"username"]) -> None: ...

    ENTRIES_FIELD_NUMBER: builtins.int
    @property
    def entries(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GroupPolicyPreferences.GroupPolicyPreferencesEntry]: ...
    def __init__(
        self,
        *,
        entries: collections.abc.Iterable[global___GroupPolicyPreferences.GroupPolicyPreferencesEntry] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["entries", b"entries"]) -> None: ...

global___GroupPolicyPreferences = GroupPolicyPreferences

@typing_extensions.final
class McafeeSitelist(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class McafeeSitelistEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        NAME_FIELD_NUMBER: builtins.int
        TYPE_FIELD_NUMBER: builtins.int
        USERNAME_FIELD_NUMBER: builtins.int
        PASSWORD_FIELD_NUMBER: builtins.int
        PASSWORD_ENCRYPTED_FIELD_NUMBER: builtins.int
        ENABLED_FIELD_NUMBER: builtins.int
        LOCAL_FIELD_NUMBER: builtins.int
        SERVER_FIELD_NUMBER: builtins.int
        DOMAIN_NAME_FIELD_NUMBER: builtins.int
        SHARE_NAME_FIELD_NUMBER: builtins.int
        USEAUTH_FIELD_NUMBER: builtins.int
        RELATIVEPATH_FIELD_NUMBER: builtins.int
        USED_LOGGEDON_USER_ACCOUNT_FIELD_NUMBER: builtins.int
        name: builtins.str
        type: builtins.str
        username: builtins.str
        password: builtins.str
        password_encrypted: builtins.str
        enabled: builtins.bool
        local: builtins.bool
        server: builtins.str
        domain_name: builtins.str
        share_name: builtins.str
        useauth: builtins.bool
        relativepath: builtins.str
        used_loggedon_user_account: builtins.bool
        def __init__(
            self,
            *,
            name: builtins.str = ...,
            type: builtins.str = ...,
            username: builtins.str = ...,
            password: builtins.str = ...,
            password_encrypted: builtins.str = ...,
            enabled: builtins.bool = ...,
            local: builtins.bool = ...,
            server: builtins.str = ...,
            domain_name: builtins.str = ...,
            share_name: builtins.str = ...,
            useauth: builtins.bool = ...,
            relativepath: builtins.str = ...,
            used_loggedon_user_account: builtins.bool = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["domain_name", b"domain_name", "enabled", b"enabled", "local", b"local", "name", b"name", "password", b"password", "password_encrypted", b"password_encrypted", "relativepath", b"relativepath", "server", b"server", "share_name", b"share_name", "type", b"type", "useauth", b"useauth", "used_loggedon_user_account", b"used_loggedon_user_account", "username", b"username"]) -> None: ...

    ENTRIES_FIELD_NUMBER: builtins.int
    @property
    def entries(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___McafeeSitelist.McafeeSitelistEntry]: ...
    def __init__(
        self,
        *,
        entries: collections.abc.Iterable[global___McafeeSitelist.McafeeSitelistEntry] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["entries", b"entries"]) -> None: ...

global___McafeeSitelist = McafeeSitelist

@typing_extensions.final
class Tomcat(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class TomcatEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        USERNAME_FIELD_NUMBER: builtins.int
        PASSWORD_FIELD_NUMBER: builtins.int
        ROLES_FIELD_NUMBER: builtins.int
        username: builtins.str
        password: builtins.str
        @property
        def roles(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
        def __init__(
            self,
            *,
            username: builtins.str = ...,
            password: builtins.str = ...,
            roles: collections.abc.Iterable[builtins.str] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["password", b"password", "roles", b"roles", "username", b"username"]) -> None: ...

    ROLES_FIELD_NUMBER: builtins.int
    ENTRIES_FIELD_NUMBER: builtins.int
    @property
    def roles(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def entries(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Tomcat.TomcatEntry]: ...
    def __init__(
        self,
        *,
        roles: collections.abc.Iterable[builtins.str] | None = ...,
        entries: collections.abc.Iterable[global___Tomcat.TomcatEntry] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["entries", b"entries", "roles", b"roles"]) -> None: ...

global___Tomcat = Tomcat

@typing_extensions.final
class JWTToken(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FIELD_NUMBER: builtins.int
    ISSUER_FIELD_NUMBER: builtins.int
    AUDIENCE_FIELD_NUMBER: builtins.int
    MINUTES_TO_EXPIRATION_FIELD_NUMBER: builtins.int
    key: builtins.str
    issuer: builtins.str
    audience: builtins.str
    minutes_to_expiration: builtins.str
    def __init__(
        self,
        *,
        key: builtins.str = ...,
        issuer: builtins.str = ...,
        audience: builtins.str = ...,
        minutes_to_expiration: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["audience", b"audience", "issuer", b"issuer", "key", b"key", "minutes_to_expiration", b"minutes_to_expiration"]) -> None: ...

global___JWTToken = JWTToken

@typing_extensions.final
class DatabaseCredential(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TYPE_FIELD_NUMBER: builtins.int
    SERVER_FIELD_NUMBER: builtins.int
    DATABASE_FIELD_NUMBER: builtins.int
    USERNAME_FIELD_NUMBER: builtins.int
    PASSWORD_FIELD_NUMBER: builtins.int
    type: builtins.str
    server: builtins.str
    database: builtins.str
    username: builtins.str
    password: builtins.str
    def __init__(
        self,
        *,
        type: builtins.str = ...,
        server: builtins.str = ...,
        database: builtins.str = ...,
        username: builtins.str = ...,
        password: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["database", b"database", "password", b"password", "server", b"server", "type", b"type", "username", b"username"]) -> None: ...

global___DatabaseCredential = DatabaseCredential

@typing_extensions.final
class ConnectionString(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    PROVIDER_NAME_FIELD_NUMBER: builtins.int
    CONNECTION_STRING_FIELD_NUMBER: builtins.int
    DATABASE_CREDENTIAL_FIELD_NUMBER: builtins.int
    name: builtins.str
    provider_name: builtins.str
    connection_string: builtins.str
    @property
    def database_credential(self) -> global___DatabaseCredential: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        provider_name: builtins.str = ...,
        connection_string: builtins.str = ...,
        database_credential: global___DatabaseCredential | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["database_credential", b"database_credential"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["connection_string", b"connection_string", "database_credential", b"database_credential", "name", b"name", "provider_name", b"provider_name"]) -> None: ...

global___ConnectionString = ConnectionString

@typing_extensions.final
class WebConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONNECTION_STRINGS_FIELD_NUMBER: builtins.int
    @property
    def connection_strings(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ConnectionString]: ...
    def __init__(
        self,
        *,
        connection_strings: collections.abc.Iterable[global___ConnectionString] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["connection_strings", b"connection_strings"]) -> None: ...

global___WebConfig = WebConfig

@typing_extensions.final
class AppSettings(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONNECTION_STRINGS_FIELD_NUMBER: builtins.int
    JWT_TOKENS_FIELD_NUMBER: builtins.int
    @property
    def connection_strings(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ConnectionString]: ...
    @property
    def jwt_tokens(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___JWTToken]: ...
    def __init__(
        self,
        *,
        connection_strings: collections.abc.Iterable[global___ConnectionString] | None = ...,
        jwt_tokens: collections.abc.Iterable[global___JWTToken] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["connection_strings", b"connection_strings", "jwt_tokens", b"jwt_tokens"]) -> None: ...

global___AppSettings = AppSettings

@typing_extensions.final
class Signature(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VERSION_FIELD_NUMBER: builtins.int
    SIGNERS_FIELD_NUMBER: builtins.int
    VERIFICATION_FLAGS_FIELD_NUMBER: builtins.int
    version: builtins.int
    @property
    def signers(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    verification_flags: global___VerificationFlags.ValueType
    def __init__(
        self,
        *,
        version: builtins.int = ...,
        signers: collections.abc.Iterable[builtins.str] | None = ...,
        verification_flags: global___VerificationFlags.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["signers", b"signers", "verification_flags", b"verification_flags", "version", b"version"]) -> None: ...

global___Signature = Signature

@typing_extensions.final
class Header(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MAJOR_IMAGE_VERSION_FIELD_NUMBER: builtins.int
    MAJOR_LINKER_VERSION_FIELD_NUMBER: builtins.int
    MAJOR_OPERATING_SYSTEM_VERSION_FIELD_NUMBER: builtins.int
    MAJOR_SUBSYSTEM_VERSION_FIELD_NUMBER: builtins.int
    MINOR_IMAGE_VERSION_FIELD_NUMBER: builtins.int
    MINOR_LINKER_VERSION_FIELD_NUMBER: builtins.int
    MINOR_OPERATING_SYSTEM_VERSION_FIELD_NUMBER: builtins.int
    MINOR_SUBSYSTEM_VERSION_FIELD_NUMBER: builtins.int
    TIME_DATE_STAMP_FIELD_NUMBER: builtins.int
    major_image_version: builtins.int
    major_linker_version: builtins.int
    major_operating_system_version: builtins.int
    major_subsystem_version: builtins.int
    minor_image_version: builtins.int
    minor_linker_version: builtins.int
    minor_operating_system_version: builtins.int
    minor_subsystem_version: builtins.int
    @property
    def time_date_stamp(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        major_image_version: builtins.int = ...,
        major_linker_version: builtins.int = ...,
        major_operating_system_version: builtins.int = ...,
        major_subsystem_version: builtins.int = ...,
        minor_image_version: builtins.int = ...,
        minor_linker_version: builtins.int = ...,
        minor_operating_system_version: builtins.int = ...,
        minor_subsystem_version: builtins.int = ...,
        time_date_stamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time_date_stamp", b"time_date_stamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["major_image_version", b"major_image_version", "major_linker_version", b"major_linker_version", "major_operating_system_version", b"major_operating_system_version", "major_subsystem_version", b"major_subsystem_version", "minor_image_version", b"minor_image_version", "minor_linker_version", b"minor_linker_version", "minor_operating_system_version", b"minor_operating_system_version", "minor_subsystem_version", b"minor_subsystem_version", "time_date_stamp", b"time_date_stamp"]) -> None: ...

global___Header = Header

@typing_extensions.final
class Symbol(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FUNC_NAME_FIELD_NUMBER: builtins.int
    OFFSET_FIELD_NUMBER: builtins.int
    ORDINAL_FIELD_NUMBER: builtins.int
    func_name: builtins.str
    offset: builtins.int
    ordinal: builtins.int
    def __init__(
        self,
        *,
        func_name: builtins.str = ...,
        offset: builtins.int = ...,
        ordinal: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["func_name", b"func_name", "offset", b"offset", "ordinal", b"ordinal"]) -> None: ...

global___Symbol = Symbol

@typing_extensions.final
class Exports(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SYMBOLS_FIELD_NUMBER: builtins.int
    @property
    def symbols(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Symbol]: ...
    def __init__(
        self,
        *,
        symbols: collections.abc.Iterable[global___Symbol] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["symbols", b"symbols"]) -> None: ...

global___Exports = Exports

@typing_extensions.final
class Dll(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    SYMBOLS_FIELD_NUMBER: builtins.int
    name: builtins.str
    @property
    def symbols(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Symbol]: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        symbols: collections.abc.Iterable[global___Symbol] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name", b"name", "symbols", b"symbols"]) -> None: ...

global___Dll = Dll

@typing_extensions.final
class Imports(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DLLS_FIELD_NUMBER: builtins.int
    @property
    def dlls(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Dll]: ...
    def __init__(
        self,
        *,
        dlls: collections.abc.Iterable[global___Dll] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dlls", b"dlls"]) -> None: ...

global___Imports = Imports

@typing_extensions.final
class VersionInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ASSEMBLY_VERSION_FIELD_NUMBER: builtins.int
    COMMENTS_FIELD_NUMBER: builtins.int
    COMPANY_NAME_FIELD_NUMBER: builtins.int
    FILE_DESCRIPTION_FIELD_NUMBER: builtins.int
    FILE_VERSION_FIELD_NUMBER: builtins.int
    INTERNAL_NAME_FIELD_NUMBER: builtins.int
    LEGAL_COPYRIGHT_FIELD_NUMBER: builtins.int
    LEGAL_TRADEMARKS_FIELD_NUMBER: builtins.int
    ORIGINAL_FILENAME_FIELD_NUMBER: builtins.int
    PRIVATE_BUILD_FIELD_NUMBER: builtins.int
    PRODUCT_NAME_FIELD_NUMBER: builtins.int
    PRODUCT_VERSION_FIELD_NUMBER: builtins.int
    SPECIAL_BUILD_FIELD_NUMBER: builtins.int
    assembly_version: builtins.str
    comments: builtins.str
    company_name: builtins.str
    file_description: builtins.str
    file_version: builtins.str
    internal_name: builtins.str
    legal_copyright: builtins.str
    legal_trademarks: builtins.str
    original_filename: builtins.str
    private_build: builtins.str
    product_name: builtins.str
    product_version: builtins.str
    special_build: builtins.str
    def __init__(
        self,
        *,
        assembly_version: builtins.str = ...,
        comments: builtins.str = ...,
        company_name: builtins.str = ...,
        file_description: builtins.str = ...,
        file_version: builtins.str = ...,
        internal_name: builtins.str = ...,
        legal_copyright: builtins.str = ...,
        legal_trademarks: builtins.str = ...,
        original_filename: builtins.str = ...,
        private_build: builtins.str = ...,
        product_name: builtins.str = ...,
        product_version: builtins.str = ...,
        special_build: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["assembly_version", b"assembly_version", "comments", b"comments", "company_name", b"company_name", "file_description", b"file_description", "file_version", b"file_version", "internal_name", b"internal_name", "legal_copyright", b"legal_copyright", "legal_trademarks", b"legal_trademarks", "original_filename", b"original_filename", "private_build", b"private_build", "product_name", b"product_name", "product_version", b"product_version", "special_build", b"special_build"]) -> None: ...

global___VersionInfo = VersionInfo

@typing_extensions.final
class Pe(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    EXPORTS_FIELD_NUMBER: builtins.int
    IMPORTS_FIELD_NUMBER: builtins.int
    VERSION_INFO_FIELD_NUMBER: builtins.int
    STRING_RESOURCES_FIELD_NUMBER: builtins.int
    SIGNATURES_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> global___Header: ...
    @property
    def exports(self) -> global___Exports: ...
    @property
    def imports(self) -> global___Imports: ...
    @property
    def version_info(self) -> global___VersionInfo: ...
    @property
    def string_resources(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def signatures(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Signature]: ...
    def __init__(
        self,
        *,
        header: global___Header | None = ...,
        exports: global___Exports | None = ...,
        imports: global___Imports | None = ...,
        version_info: global___VersionInfo | None = ...,
        string_resources: collections.abc.Iterable[builtins.str] | None = ...,
        signatures: collections.abc.Iterable[global___Signature] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["exports", b"exports", "header", b"header", "imports", b"imports", "version_info", b"version_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["exports", b"exports", "header", b"header", "imports", b"imports", "signatures", b"signatures", "string_resources", b"string_resources", "version_info", b"version_info"]) -> None: ...

global___Pe = Pe

@typing_extensions.final
class Resource(google.protobuf.message.Message):
    """Used in DotnetAssembly - TODO: combine into one block"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    MD5_FIELD_NUMBER: builtins.int
    SHA1_FIELD_NUMBER: builtins.int
    SHA256_FIELD_NUMBER: builtins.int
    name: builtins.str
    md5: builtins.str
    sha1: builtins.str
    sha256: builtins.str
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        md5: builtins.str = ...,
        sha1: builtins.str = ...,
        sha256: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["md5", b"md5", "name", b"name", "sha1", b"sha1", "sha256", b"sha256"]) -> None: ...

global___Resource = Resource

@typing_extensions.final
class Typeref(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MODULE_NAME_FIELD_NUMBER: builtins.int
    FUNCTION_NAME_FIELD_NUMBER: builtins.int
    module_name: builtins.str
    function_name: builtins.str
    def __init__(
        self,
        *,
        module_name: builtins.str = ...,
        function_name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["function_name", b"function_name", "module_name", b"module_name"]) -> None: ...

global___Typeref = Typeref

@typing_extensions.final
class ImplMapEntry(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MODULE_NAME_FIELD_NUMBER: builtins.int
    FUNCTION_NAME_FIELD_NUMBER: builtins.int
    module_name: builtins.str
    function_name: builtins.str
    def __init__(
        self,
        *,
        module_name: builtins.str = ...,
        function_name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["function_name", b"function_name", "module_name", b"module_name"]) -> None: ...

global___ImplMapEntry = ImplMapEntry

@typing_extensions.final
class DotnetAssembly(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    EXPORTS_FIELD_NUMBER: builtins.int
    IMPORTS_FIELD_NUMBER: builtins.int
    VERSION_INFO_FIELD_NUMBER: builtins.int
    STRING_RESOURCES_FIELD_NUMBER: builtins.int
    SIGNATURES_FIELD_NUMBER: builtins.int
    RESOURCES_FIELD_NUMBER: builtins.int
    PDB_STRING_FIELD_NUMBER: builtins.int
    DOTNET_VERSION_FIELD_NUMBER: builtins.int
    TYPEREFS_FIELD_NUMBER: builtins.int
    IMPL_MAP_ENTRIES_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> global___Header: ...
    @property
    def exports(self) -> global___Exports: ...
    @property
    def imports(self) -> global___Imports: ...
    @property
    def version_info(self) -> global___VersionInfo: ...
    @property
    def string_resources(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def signatures(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Signature]: ...
    @property
    def resources(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Resource]: ...
    pdb_string: builtins.str
    dotnet_version: builtins.str
    @property
    def typerefs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Typeref]: ...
    @property
    def impl_map_entries(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ImplMapEntry]: ...
    def __init__(
        self,
        *,
        header: global___Header | None = ...,
        exports: global___Exports | None = ...,
        imports: global___Imports | None = ...,
        version_info: global___VersionInfo | None = ...,
        string_resources: collections.abc.Iterable[builtins.str] | None = ...,
        signatures: collections.abc.Iterable[global___Signature] | None = ...,
        resources: collections.abc.Iterable[global___Resource] | None = ...,
        pdb_string: builtins.str = ...,
        dotnet_version: builtins.str = ...,
        typerefs: collections.abc.Iterable[global___Typeref] | None = ...,
        impl_map_entries: collections.abc.Iterable[global___ImplMapEntry] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["exports", b"exports", "header", b"header", "imports", b"imports", "version_info", b"version_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dotnet_version", b"dotnet_version", "exports", b"exports", "header", b"header", "impl_map_entries", b"impl_map_entries", "imports", b"imports", "pdb_string", b"pdb_string", "resources", b"resources", "signatures", b"signatures", "string_resources", b"string_resources", "typerefs", b"typerefs", "version_info", b"version_info"]) -> None: ...

global___DotnetAssembly = DotnetAssembly

@typing_extensions.final
class Archive(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class ArchiveEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        NAME_FIELD_NUMBER: builtins.int
        IS_DIR_FIELD_NUMBER: builtins.int
        COMPRESS_SIZE_FIELD_NUMBER: builtins.int
        UNCOMPRESS_SIZE_FIELD_NUMBER: builtins.int
        LAST_MODIFIED_FIELD_NUMBER: builtins.int
        name: builtins.str
        is_dir: builtins.bool
        compress_size: builtins.int
        uncompress_size: builtins.int
        @property
        def last_modified(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
        def __init__(
            self,
            *,
            name: builtins.str = ...,
            is_dir: builtins.bool = ...,
            compress_size: builtins.int = ...,
            uncompress_size: builtins.int = ...,
            last_modified: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["last_modified", b"last_modified"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["compress_size", b"compress_size", "is_dir", b"is_dir", "last_modified", b"last_modified", "name", b"name", "uncompress_size", b"uncompress_size"]) -> None: ...

    TYPE_FIELD_NUMBER: builtins.int
    IS_ENCRYPTED_FIELD_NUMBER: builtins.int
    UNCOMPRESSED_SIZE_FIELD_NUMBER: builtins.int
    ENCRYPTION_HASH_FIELD_NUMBER: builtins.int
    ENTRIES_FIELD_NUMBER: builtins.int
    type: builtins.str
    is_encrypted: builtins.bool
    uncompressed_size: builtins.int
    encryption_hash: builtins.str
    """*2john hash representing the archive password"""
    @property
    def entries(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Archive.ArchiveEntry]: ...
    def __init__(
        self,
        *,
        type: builtins.str = ...,
        is_encrypted: builtins.bool = ...,
        uncompressed_size: builtins.int = ...,
        encryption_hash: builtins.str | None = ...,
        entries: collections.abc.Iterable[global___Archive.ArchiveEntry] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_encryption_hash", b"_encryption_hash", "encryption_hash", b"encryption_hash"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_encryption_hash", b"_encryption_hash", "encryption_hash", b"encryption_hash", "entries", b"entries", "is_encrypted", b"is_encrypted", "type", b"type", "uncompressed_size", b"uncompressed_size"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_encryption_hash", b"_encryption_hash"]) -> typing_extensions.Literal["encryption_hash"] | None: ...

global___Archive = Archive

@typing_extensions.final
class RegHiveSystem(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BOOT_KEY_FIELD_NUMBER: builtins.int
    boot_key: builtins.bytes
    def __init__(
        self,
        *,
        boot_key: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["boot_key", b"boot_key"]) -> None: ...

global___RegHiveSystem = RegHiveSystem

@typing_extensions.final
class DomainCachedCredential(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IS_DECRYPTED_FIELD_NUMBER: builtins.int
    ENC_RAW_VALUE_FIELD_NUMBER: builtins.int
    DOMAIN_LONG_FIELD_NUMBER: builtins.int
    USER_NAME_FIELD_NUMBER: builtins.int
    ITERATION_COUNT_FIELD_NUMBER: builtins.int
    CACHED_HASH_FIELD_NUMBER: builtins.int
    ANSWER_FIELD_NUMBER: builtins.int
    TIMESTAMP_FIELD_NUMBER: builtins.int
    is_decrypted: builtins.bool
    """true if the hive values are decrypted"""
    enc_raw_value: builtins.bytes
    """raw bytes extracted from the registry key"""
    domain_long: builtins.str
    """DOMAIN.CORP/username"""
    user_name: builtins.str
    """username"""
    iteration_count: builtins.int
    """counts for Vista style iteration"""
    cached_hash: builtins.bytes
    """bytes of the decoded domain cached hash"""
    answer: builtins.str
    """string representation of the crackable hash"""
    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """timestamp of the login, UTC"""
    def __init__(
        self,
        *,
        is_decrypted: builtins.bool = ...,
        enc_raw_value: builtins.bytes = ...,
        domain_long: builtins.str = ...,
        user_name: builtins.str = ...,
        iteration_count: builtins.int = ...,
        cached_hash: builtins.bytes = ...,
        answer: builtins.str = ...,
        timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["timestamp", b"timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["answer", b"answer", "cached_hash", b"cached_hash", "domain_long", b"domain_long", "enc_raw_value", b"enc_raw_value", "is_decrypted", b"is_decrypted", "iteration_count", b"iteration_count", "timestamp", b"timestamp", "user_name", b"user_name"]) -> None: ...

global___DomainCachedCredential = DomainCachedCredential

@typing_extensions.final
class LSASecret(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    IS_DECRYPTED_FIELD_NUMBER: builtins.int
    VALUE_ENC_FIELD_NUMBER: builtins.int
    VALUE_DEC_FIELD_NUMBER: builtins.int
    VALUE_DEC_STR_FIELD_NUMBER: builtins.int
    name: builtins.str
    """name of the secret"""
    is_decrypted: builtins.bool
    """true if the value is decrypted"""
    value_enc: builtins.bytes
    """encrypted bytes of the secret"""
    value_dec: builtins.bytes
    """decrypted bytes of the secret"""
    value_dec_str: builtins.str
    """string representation of the decrypted secret"""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        is_decrypted: builtins.bool = ...,
        value_enc: builtins.bytes = ...,
        value_dec: builtins.bytes = ...,
        value_dec_str: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["is_decrypted", b"is_decrypted", "name", b"name", "value_dec", b"value_dec", "value_dec_str", b"value_dec_str", "value_enc", b"value_enc"]) -> None: ...

global___LSASecret = LSASecret

@typing_extensions.final
class RegHiveSecurity(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IS_DECRYPTED_FIELD_NUMBER: builtins.int
    VISTA_STYLE_FIELD_NUMBER: builtins.int
    LSA_SECRET_KEY_ENC_FIELD_NUMBER: builtins.int
    LSA_SECRET_KEY_DEC_FIELD_NUMBER: builtins.int
    NLKM_SECRET_ENC_FIELD_NUMBER: builtins.int
    NLKM_SECRET_DEC_FIELD_NUMBER: builtins.int
    LSA_SECRETS_FIELD_NUMBER: builtins.int
    DOMAIN_CACHED_CREDENTIALS_FIELD_NUMBER: builtins.int
    is_decrypted: builtins.bool
    """true if the hive values are decrypted"""
    vista_style: builtins.bool
    """true if hive is post XP"""
    lsa_secret_key_enc: builtins.bytes
    """enc/dec bytes of the LSASecret"""
    lsa_secret_key_dec: builtins.bytes
    nlkm_secret_enc: builtins.bytes
    """enc/dec bytes of the NLKM key"""
    nlkm_secret_dec: builtins.bytes
    @property
    def lsa_secrets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LSASecret]:
        """one or more LSA secrets"""
    @property
    def domain_cached_credentials(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DomainCachedCredential]:
        """one or more domain cached creds"""
    def __init__(
        self,
        *,
        is_decrypted: builtins.bool = ...,
        vista_style: builtins.bool = ...,
        lsa_secret_key_enc: builtins.bytes = ...,
        lsa_secret_key_dec: builtins.bytes = ...,
        nlkm_secret_enc: builtins.bytes = ...,
        nlkm_secret_dec: builtins.bytes = ...,
        lsa_secrets: collections.abc.Iterable[global___LSASecret] | None = ...,
        domain_cached_credentials: collections.abc.Iterable[global___DomainCachedCredential] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["domain_cached_credentials", b"domain_cached_credentials", "is_decrypted", b"is_decrypted", "lsa_secret_key_dec", b"lsa_secret_key_dec", "lsa_secret_key_enc", b"lsa_secret_key_enc", "lsa_secrets", b"lsa_secrets", "nlkm_secret_dec", b"nlkm_secret_dec", "nlkm_secret_enc", b"nlkm_secret_enc", "vista_style", b"vista_style"]) -> None: ...

global___RegHiveSecurity = RegHiveSecurity

@typing_extensions.final
class SamHash(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IS_DECRYPTED_FIELD_NUMBER: builtins.int
    NEW_STYLE_FIELD_NUMBER: builtins.int
    USERNAME_FIELD_NUMBER: builtins.int
    RID_FIELD_NUMBER: builtins.int
    LM_HASH_ENC_FIELD_NUMBER: builtins.int
    LM_HASH_DEC_FIELD_NUMBER: builtins.int
    NT_HASH_ENC_FIELD_NUMBER: builtins.int
    NT_HASH_DEC_FIELD_NUMBER: builtins.int
    ANSWER_FIELD_NUMBER: builtins.int
    is_decrypted: builtins.bool
    """true if the value is decrypted"""
    new_style: builtins.bool
    """true if the hash is a "new style" hash"""
    username: builtins.str
    """name of the local user account"""
    rid: builtins.int
    """RID of the local user account"""
    lm_hash_enc: builtins.bytes
    """bytes of the enc/dec LM hash value"""
    lm_hash_dec: builtins.bytes
    nt_hash_enc: builtins.bytes
    """bytes of the enc/dec NT hash value"""
    nt_hash_dec: builtins.bytes
    answer: builtins.str
    """string representation of the total hash"""
    def __init__(
        self,
        *,
        is_decrypted: builtins.bool = ...,
        new_style: builtins.bool = ...,
        username: builtins.str = ...,
        rid: builtins.int = ...,
        lm_hash_enc: builtins.bytes = ...,
        lm_hash_dec: builtins.bytes = ...,
        nt_hash_enc: builtins.bytes = ...,
        nt_hash_dec: builtins.bytes = ...,
        answer: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["answer", b"answer", "is_decrypted", b"is_decrypted", "lm_hash_dec", b"lm_hash_dec", "lm_hash_enc", b"lm_hash_enc", "new_style", b"new_style", "nt_hash_dec", b"nt_hash_dec", "nt_hash_enc", b"nt_hash_enc", "rid", b"rid", "username", b"username"]) -> None: ...

global___SamHash = SamHash

@typing_extensions.final
class RegHiveSam(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IS_DECRYPTED_FIELD_NUMBER: builtins.int
    F_BYTES_FIELD_NUMBER: builtins.int
    HASHED_BOOT_KEY_FIELD_NUMBER: builtins.int
    SAM_HASHES_FIELD_NUMBER: builtins.int
    is_decrypted: builtins.bool
    """true if the hive values are decrypted"""
    f_bytes: builtins.bytes
    """bytes of the encrypted source for the HashedBootKey"""
    hashed_boot_key: builtins.bytes
    """bytes of the decrypted HashedBootKey"""
    @property
    def sam_hashes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SamHash]:
        """one or more local SAM hashes"""
    def __init__(
        self,
        *,
        is_decrypted: builtins.bool = ...,
        f_bytes: builtins.bytes = ...,
        hashed_boot_key: builtins.bytes = ...,
        sam_hashes: collections.abc.Iterable[global___SamHash] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["f_bytes", b"f_bytes", "hashed_boot_key", b"hashed_boot_key", "is_decrypted", b"is_decrypted", "sam_hashes", b"sam_hashes"]) -> None: ...

global___RegHiveSam = RegHiveSam

@typing_extensions.final
class RawParsedData(google.protobuf.message.Message):
    """RawParsedData is for unstructured data meant for the user instead of an automated pipeline"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATA_FIELD_NUMBER: builtins.int
    data: builtins.str
    def __init__(
        self,
        *,
        data: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data"]) -> None: ...

global___RawParsedData = RawParsedData

@typing_extensions.final
class DpapiCredentialAttribute(google.protobuf.message.Message):
    """not yet used
    https://github.com/fortra/impacket/blob/8799a1a2c42ad74423841d21ed5f4193ea54f3d5/impacket/dpapi.py#L850-L862
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FLAGS_FIELD_NUMBER: builtins.int
    KEYWORD_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    flags: builtins.int
    keyword: builtins.str
    data: builtins.bytes
    def __init__(
        self,
        *,
        flags: builtins.int = ...,
        keyword: builtins.str = ...,
        data: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "flags", b"flags", "keyword", b"keyword"]) -> None: ...

global___DpapiCredentialAttribute = DpapiCredentialAttribute

@typing_extensions.final
class DpapiCredentialFile(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _CREDENTIAL_FLAGS:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _CREDENTIAL_FLAGSEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[DpapiCredentialFile._CREDENTIAL_FLAGS.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        CRED_FALGS_UNKNOWN: DpapiCredentialFile._CREDENTIAL_FLAGS.ValueType  # 0
        CRED_FLAGS_PASSWORD_FOR_CERT: DpapiCredentialFile._CREDENTIAL_FLAGS.ValueType  # 1
        CRED_FLAGS_PROMPT_NOW: DpapiCredentialFile._CREDENTIAL_FLAGS.ValueType  # 2
        CRED_FLAGS_USERNAME_TARGET: DpapiCredentialFile._CREDENTIAL_FLAGS.ValueType  # 4
        CRED_FLAGS_OWF_CRED_BLOB: DpapiCredentialFile._CREDENTIAL_FLAGS.ValueType  # 8
        CRED_FLAGS_REQUIRE_CONFIRMATION: DpapiCredentialFile._CREDENTIAL_FLAGS.ValueType  # 16
        CRED_FLAGS_WILDCARD_MATCH: DpapiCredentialFile._CREDENTIAL_FLAGS.ValueType  # 32
        CRED_FLAGS_VSM_PROTECTED: DpapiCredentialFile._CREDENTIAL_FLAGS.ValueType  # 64
        CRED_FLAGS_NGC_CERT: DpapiCredentialFile._CREDENTIAL_FLAGS.ValueType  # 128

    class CREDENTIAL_FLAGS(_CREDENTIAL_FLAGS, metaclass=_CREDENTIAL_FLAGSEnumTypeWrapper):
        """https://github.com/fortra/impacket/blob/8799a1a2c42ad74423841d21ed5f4193ea54f3d5/impacket/dpapi.py#L196-L204"""

    CRED_FALGS_UNKNOWN: DpapiCredentialFile.CREDENTIAL_FLAGS.ValueType  # 0
    CRED_FLAGS_PASSWORD_FOR_CERT: DpapiCredentialFile.CREDENTIAL_FLAGS.ValueType  # 1
    CRED_FLAGS_PROMPT_NOW: DpapiCredentialFile.CREDENTIAL_FLAGS.ValueType  # 2
    CRED_FLAGS_USERNAME_TARGET: DpapiCredentialFile.CREDENTIAL_FLAGS.ValueType  # 4
    CRED_FLAGS_OWF_CRED_BLOB: DpapiCredentialFile.CREDENTIAL_FLAGS.ValueType  # 8
    CRED_FLAGS_REQUIRE_CONFIRMATION: DpapiCredentialFile.CREDENTIAL_FLAGS.ValueType  # 16
    CRED_FLAGS_WILDCARD_MATCH: DpapiCredentialFile.CREDENTIAL_FLAGS.ValueType  # 32
    CRED_FLAGS_VSM_PROTECTED: DpapiCredentialFile.CREDENTIAL_FLAGS.ValueType  # 64
    CRED_FLAGS_NGC_CERT: DpapiCredentialFile.CREDENTIAL_FLAGS.ValueType  # 128

    class _CREDENTIAL_PERSIST:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _CREDENTIAL_PERSISTEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[DpapiCredentialFile._CREDENTIAL_PERSIST.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        CRED_PERSIST_NONE: DpapiCredentialFile._CREDENTIAL_PERSIST.ValueType  # 0
        CRED_PERSIST_SESSION: DpapiCredentialFile._CREDENTIAL_PERSIST.ValueType  # 1
        CRED_PERSIST_LOCAL_MACHINE: DpapiCredentialFile._CREDENTIAL_PERSIST.ValueType  # 2
        CRED_PERSIST_ENTERPRISE: DpapiCredentialFile._CREDENTIAL_PERSIST.ValueType  # 3

    class CREDENTIAL_PERSIST(_CREDENTIAL_PERSIST, metaclass=_CREDENTIAL_PERSISTEnumTypeWrapper):
        """https://github.com/fortra/impacket/blob/8799a1a2c42ad74423841d21ed5f4193ea54f3d5/impacket/dpapi.py#L216-L220"""

    CRED_PERSIST_NONE: DpapiCredentialFile.CREDENTIAL_PERSIST.ValueType  # 0
    CRED_PERSIST_SESSION: DpapiCredentialFile.CREDENTIAL_PERSIST.ValueType  # 1
    CRED_PERSIST_LOCAL_MACHINE: DpapiCredentialFile.CREDENTIAL_PERSIST.ValueType  # 2
    CRED_PERSIST_ENTERPRISE: DpapiCredentialFile.CREDENTIAL_PERSIST.ValueType  # 3

    class _CREDENTIAL_TYPE:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _CREDENTIAL_TYPEEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[DpapiCredentialFile._CREDENTIAL_TYPE.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        CRED_TYPE_UNKNOWN: DpapiCredentialFile._CREDENTIAL_TYPE.ValueType  # 0
        CRED_TYPE_GENERIC: DpapiCredentialFile._CREDENTIAL_TYPE.ValueType  # 1
        CRED_TYPE_DOMAIN_PASSWORD: DpapiCredentialFile._CREDENTIAL_TYPE.ValueType  # 2
        CRED_TYPE_DOMAIN_CERTIFICATE: DpapiCredentialFile._CREDENTIAL_TYPE.ValueType  # 3
        CRED_TYPE_DOMAIN_VISIBLE_PASSWORD: DpapiCredentialFile._CREDENTIAL_TYPE.ValueType  # 4
        CRED_TYPE_GENERIC_CERTIFICATE: DpapiCredentialFile._CREDENTIAL_TYPE.ValueType  # 5
        CRED_TYPE_DOMAIN_EXTENDED: DpapiCredentialFile._CREDENTIAL_TYPE.ValueType  # 6
        CRED_TYPE_MAXIMUM: DpapiCredentialFile._CREDENTIAL_TYPE.ValueType  # 7
        CRED_TYPE_MAXIMUM_EX: DpapiCredentialFile._CREDENTIAL_TYPE.ValueType  # 8

    class CREDENTIAL_TYPE(_CREDENTIAL_TYPE, metaclass=_CREDENTIAL_TYPEEnumTypeWrapper):
        """https://github.com/fortra/impacket/blob/8799a1a2c42ad74423841d21ed5f4193ea54f3d5/impacket/dpapi.py#L206=L214"""

    CRED_TYPE_UNKNOWN: DpapiCredentialFile.CREDENTIAL_TYPE.ValueType  # 0
    CRED_TYPE_GENERIC: DpapiCredentialFile.CREDENTIAL_TYPE.ValueType  # 1
    CRED_TYPE_DOMAIN_PASSWORD: DpapiCredentialFile.CREDENTIAL_TYPE.ValueType  # 2
    CRED_TYPE_DOMAIN_CERTIFICATE: DpapiCredentialFile.CREDENTIAL_TYPE.ValueType  # 3
    CRED_TYPE_DOMAIN_VISIBLE_PASSWORD: DpapiCredentialFile.CREDENTIAL_TYPE.ValueType  # 4
    CRED_TYPE_GENERIC_CERTIFICATE: DpapiCredentialFile.CREDENTIAL_TYPE.ValueType  # 5
    CRED_TYPE_DOMAIN_EXTENDED: DpapiCredentialFile.CREDENTIAL_TYPE.ValueType  # 6
    CRED_TYPE_MAXIMUM: DpapiCredentialFile.CREDENTIAL_TYPE.ValueType  # 7
    CRED_TYPE_MAXIMUM_EX: DpapiCredentialFile.CREDENTIAL_TYPE.ValueType  # 8

    DPAPI_BLOB_ID_FIELD_NUMBER: builtins.int
    LAST_WRITTEN_FIELD_NUMBER: builtins.int
    FLAGS_FIELD_NUMBER: builtins.int
    PERSIST_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    COMMENT_FIELD_NUMBER: builtins.int
    TARGET_FIELD_NUMBER: builtins.int
    TARGET_ALIAS_FIELD_NUMBER: builtins.int
    USERNAME_FIELD_NUMBER: builtins.int
    CREDENTIAL_FIELD_NUMBER: builtins.int
    CREDENTIAL_ATTRIBUTE_FIELD_NUMBER: builtins.int
    dpapi_blob_id: builtins.str
    """unique identifier of the carved DPAPI blob ID that decrypts to the data below
      TODO: how to exactly handle this being decrypted?
    """
    @property
    def last_written(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    flags: global___DpapiCredentialFile.CREDENTIAL_FLAGS.ValueType
    persist: global___DpapiCredentialFile.CREDENTIAL_PERSIST.ValueType
    type: global___DpapiCredentialFile.CREDENTIAL_TYPE.ValueType
    comment: builtins.str
    target: builtins.str
    target_alias: builtins.str
    username: builtins.str
    credential: builtins.str
    @property
    def credential_attribute(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DpapiCredentialAttribute]: ...
    def __init__(
        self,
        *,
        dpapi_blob_id: builtins.str = ...,
        last_written: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        flags: global___DpapiCredentialFile.CREDENTIAL_FLAGS.ValueType = ...,
        persist: global___DpapiCredentialFile.CREDENTIAL_PERSIST.ValueType = ...,
        type: global___DpapiCredentialFile.CREDENTIAL_TYPE.ValueType = ...,
        comment: builtins.str = ...,
        target: builtins.str = ...,
        target_alias: builtins.str = ...,
        username: builtins.str = ...,
        credential: builtins.str = ...,
        credential_attribute: collections.abc.Iterable[global___DpapiCredentialAttribute] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["last_written", b"last_written"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["comment", b"comment", "credential", b"credential", "credential_attribute", b"credential_attribute", "dpapi_blob_id", b"dpapi_blob_id", "flags", b"flags", "last_written", b"last_written", "persist", b"persist", "target", b"target", "target_alias", b"target_alias", "type", b"type", "username", b"username"]) -> None: ...

global___DpapiCredentialFile = DpapiCredentialFile

@typing_extensions.final
class ChromiumHistoryFile(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_DATA_DIRECTORY_FIELD_NUMBER: builtins.int
    BROWSER_FIELD_NUMBER: builtins.int
    USERNAME_FIELD_NUMBER: builtins.int
    URLS_COUNT_FIELD_NUMBER: builtins.int
    DOWNLOADS_COUNT_FIELD_NUMBER: builtins.int
    user_data_directory: builtins.str
    browser: builtins.str
    username: builtins.str
    urls_count: builtins.int
    downloads_count: builtins.int
    def __init__(
        self,
        *,
        user_data_directory: builtins.str = ...,
        browser: builtins.str = ...,
        username: builtins.str = ...,
        urls_count: builtins.int = ...,
        downloads_count: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["browser", b"browser", "downloads_count", b"downloads_count", "urls_count", b"urls_count", "user_data_directory", b"user_data_directory", "username", b"username"]) -> None: ...

global___ChromiumHistoryFile = ChromiumHistoryFile

@typing_extensions.final
class ChromiumLoginsFile(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_DATA_DIRECTORY_FIELD_NUMBER: builtins.int
    BROWSER_FIELD_NUMBER: builtins.int
    USERNAME_FIELD_NUMBER: builtins.int
    LOGINS_COUNT_FIELD_NUMBER: builtins.int
    user_data_directory: builtins.str
    browser: builtins.str
    username: builtins.str
    logins_count: builtins.int
    def __init__(
        self,
        *,
        user_data_directory: builtins.str = ...,
        browser: builtins.str = ...,
        username: builtins.str = ...,
        logins_count: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["browser", b"browser", "logins_count", b"logins_count", "user_data_directory", b"user_data_directory", "username", b"username"]) -> None: ...

global___ChromiumLoginsFile = ChromiumLoginsFile

@typing_extensions.final
class ChromiumCookiesFile(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_DATA_DIRECTORY_FIELD_NUMBER: builtins.int
    BROWSER_FIELD_NUMBER: builtins.int
    USERNAME_FIELD_NUMBER: builtins.int
    COOKIES_COUNT_FIELD_NUMBER: builtins.int
    user_data_directory: builtins.str
    browser: builtins.str
    username: builtins.str
    cookies_count: builtins.int
    def __init__(
        self,
        *,
        user_data_directory: builtins.str = ...,
        browser: builtins.str = ...,
        username: builtins.str = ...,
        cookies_count: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["browser", b"browser", "cookies_count", b"cookies_count", "user_data_directory", b"user_data_directory", "username", b"username"]) -> None: ...

global___ChromiumCookiesFile = ChromiumCookiesFile

@typing_extensions.final
class ChromiumStateFile(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_DATA_DIRECTORY_FIELD_NUMBER: builtins.int
    BROWSER_FIELD_NUMBER: builtins.int
    USERNAME_FIELD_NUMBER: builtins.int
    INSTALLATION_DATE_FIELD_NUMBER: builtins.int
    LAUNCH_COUNT_FIELD_NUMBER: builtins.int
    MASTERKEY_GUID_FIELD_NUMBER: builtins.int
    KEY_BYTES_ENC_FIELD_NUMBER: builtins.int
    APP_BOUND_FIXED_DATA_ENC_FIELD_NUMBER: builtins.int
    IS_DECRYPTED_FIELD_NUMBER: builtins.int
    KEY_BYTES_DEC_FIELD_NUMBER: builtins.int
    APP_BOUND_FIXED_DATA_DEC_FIELD_NUMBER: builtins.int
    ORIGINATING_OBJECT_ID_FIELD_NUMBER: builtins.int
    user_data_directory: builtins.str
    browser: builtins.str
    username: builtins.str
    @property
    def installation_date(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    launch_count: builtins.int
    masterkey_guid: builtins.str
    key_bytes_enc: builtins.bytes
    app_bound_fixed_data_enc: builtins.bytes
    is_decrypted: builtins.bool
    key_bytes_dec: builtins.bytes
    app_bound_fixed_data_dec: builtins.bytes
    originating_object_id: builtins.str
    def __init__(
        self,
        *,
        user_data_directory: builtins.str = ...,
        browser: builtins.str = ...,
        username: builtins.str = ...,
        installation_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        launch_count: builtins.int = ...,
        masterkey_guid: builtins.str = ...,
        key_bytes_enc: builtins.bytes = ...,
        app_bound_fixed_data_enc: builtins.bytes = ...,
        is_decrypted: builtins.bool = ...,
        key_bytes_dec: builtins.bytes = ...,
        app_bound_fixed_data_dec: builtins.bytes = ...,
        originating_object_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["installation_date", b"installation_date"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["app_bound_fixed_data_dec", b"app_bound_fixed_data_dec", "app_bound_fixed_data_enc", b"app_bound_fixed_data_enc", "browser", b"browser", "installation_date", b"installation_date", "is_decrypted", b"is_decrypted", "key_bytes_dec", b"key_bytes_dec", "key_bytes_enc", b"key_bytes_enc", "launch_count", b"launch_count", "masterkey_guid", b"masterkey_guid", "originating_object_id", b"originating_object_id", "user_data_directory", b"user_data_directory", "username", b"username"]) -> None: ...

global___ChromiumStateFile = ChromiumStateFile

@typing_extensions.final
class EvtxFile(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONVERTED_CSV_FIELD_NUMBER: builtins.int
    CONVERTED_JSON_FIELD_NUMBER: builtins.int
    ORIGINATING_OBJECT_ID_FIELD_NUMBER: builtins.int
    converted_csv: builtins.str
    """Nemesis UUID"""
    converted_json: builtins.str
    """Nemesis UUID"""
    originating_object_id: builtins.str
    """Nemesis UUID"""
    def __init__(
        self,
        *,
        converted_csv: builtins.str = ...,
        converted_json: builtins.str = ...,
        originating_object_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["converted_csv", b"converted_csv", "converted_json", b"converted_json", "originating_object_id", b"originating_object_id"]) -> None: ...

global___EvtxFile = EvtxFile

@typing_extensions.final
class ParsedData(google.protobuf.message.Message):
    """Represents any file data type specifically parsed by Nemesis
     This is the container for the above section of messages
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ERROR_FIELD_NUMBER: builtins.int
    PE_FIELD_NUMBER: builtins.int
    DOTNET_ASSEMBLY_FIELD_NUMBER: builtins.int
    PASSWD_FIELD_NUMBER: builtins.int
    SHADOW_FIELD_NUMBER: builtins.int
    OFFICE_DOC_NEW_FIELD_NUMBER: builtins.int
    OFFICE_DOC_OLE_FIELD_NUMBER: builtins.int
    PDF_FIELD_NUMBER: builtins.int
    GROUP_POLICY_PREFERENCES_FIELD_NUMBER: builtins.int
    MCAFEE_SITELIST_FIELD_NUMBER: builtins.int
    WEB_CONFIG_FIELD_NUMBER: builtins.int
    APPSETTINGS_FIELD_NUMBER: builtins.int
    TOMCAT_FIELD_NUMBER: builtins.int
    ARCHIVE_FIELD_NUMBER: builtins.int
    LNK_FIELD_NUMBER: builtins.int
    RAW_PARSED_DATA_FIELD_NUMBER: builtins.int
    DPAPI_MASTERKEY_FIELD_NUMBER: builtins.int
    DPAPI_CREDENTIAL_FIELD_NUMBER: builtins.int
    CHROMIUM_HISTORY_FIELD_NUMBER: builtins.int
    CHROMIUM_LOGINS_FIELD_NUMBER: builtins.int
    CHROMIUM_COOKIES_FIELD_NUMBER: builtins.int
    CHROMIUM_STATE_FILE_FIELD_NUMBER: builtins.int
    SLACK_DOWNLOADS_FIELD_NUMBER: builtins.int
    SLACK_WORKSPACES_FIELD_NUMBER: builtins.int
    REG_HIVE_SYSTEM_FIELD_NUMBER: builtins.int
    REG_HIVE_SECURITY_FIELD_NUMBER: builtins.int
    REG_HIVE_SAM_FIELD_NUMBER: builtins.int
    EVTX_FILE_FIELD_NUMBER: builtins.int
    HAS_PARSED_CREDENTIALS_FIELD_NUMBER: builtins.int
    IS_ENCRYPTED_FIELD_NUMBER: builtins.int
    error: builtins.str
    @property
    def pe(self) -> global___Pe: ...
    @property
    def dotnet_assembly(self) -> global___DotnetAssembly: ...
    @property
    def passwd(self) -> global___Passwd: ...
    @property
    def shadow(self) -> global___Shadow: ...
    @property
    def office_doc_new(self) -> global___OfficeDocNew: ...
    @property
    def office_doc_ole(self) -> global___OfficeDocOle: ...
    @property
    def pdf(self) -> global___Pdf: ...
    @property
    def group_policy_preferences(self) -> global___GroupPolicyPreferences: ...
    @property
    def mcafee_sitelist(self) -> global___McafeeSitelist: ...
    @property
    def web_config(self) -> global___WebConfig: ...
    @property
    def appsettings(self) -> global___AppSettings: ...
    @property
    def tomcat(self) -> global___Tomcat: ...
    @property
    def archive(self) -> global___Archive: ...
    @property
    def lnk(self) -> global___Lnk: ...
    @property
    def raw_parsed_data(self) -> global___RawParsedData: ...
    @property
    def dpapi_masterkey(self) -> global___DpapiMasterkey: ...
    @property
    def dpapi_credential(self) -> global___DpapiCredentialFile:
        """DpapiVault dpapi_vault = 43;"""
    @property
    def chromium_history(self) -> global___ChromiumHistoryFile: ...
    @property
    def chromium_logins(self) -> global___ChromiumLoginsFile: ...
    @property
    def chromium_cookies(self) -> global___ChromiumCookiesFile: ...
    @property
    def chromium_state_file(self) -> global___ChromiumStateFile: ...
    @property
    def slack_downloads(self) -> global___SlackDownloads: ...
    @property
    def slack_workspaces(self) -> global___SlackWorkspaces: ...
    @property
    def reg_hive_system(self) -> global___RegHiveSystem: ...
    @property
    def reg_hive_security(self) -> global___RegHiveSecurity: ...
    @property
    def reg_hive_sam(self) -> global___RegHiveSam: ...
    @property
    def evtx_file(self) -> global___EvtxFile: ...
    has_parsed_credentials: builtins.bool
    """true if the parsed data has some kind of hash/password parsed"""
    is_encrypted: builtins.bool
    """true if the file is encrypted in some way"""
    def __init__(
        self,
        *,
        error: builtins.str = ...,
        pe: global___Pe | None = ...,
        dotnet_assembly: global___DotnetAssembly | None = ...,
        passwd: global___Passwd | None = ...,
        shadow: global___Shadow | None = ...,
        office_doc_new: global___OfficeDocNew | None = ...,
        office_doc_ole: global___OfficeDocOle | None = ...,
        pdf: global___Pdf | None = ...,
        group_policy_preferences: global___GroupPolicyPreferences | None = ...,
        mcafee_sitelist: global___McafeeSitelist | None = ...,
        web_config: global___WebConfig | None = ...,
        appsettings: global___AppSettings | None = ...,
        tomcat: global___Tomcat | None = ...,
        archive: global___Archive | None = ...,
        lnk: global___Lnk | None = ...,
        raw_parsed_data: global___RawParsedData | None = ...,
        dpapi_masterkey: global___DpapiMasterkey | None = ...,
        dpapi_credential: global___DpapiCredentialFile | None = ...,
        chromium_history: global___ChromiumHistoryFile | None = ...,
        chromium_logins: global___ChromiumLoginsFile | None = ...,
        chromium_cookies: global___ChromiumCookiesFile | None = ...,
        chromium_state_file: global___ChromiumStateFile | None = ...,
        slack_downloads: global___SlackDownloads | None = ...,
        slack_workspaces: global___SlackWorkspaces | None = ...,
        reg_hive_system: global___RegHiveSystem | None = ...,
        reg_hive_security: global___RegHiveSecurity | None = ...,
        reg_hive_sam: global___RegHiveSam | None = ...,
        evtx_file: global___EvtxFile | None = ...,
        has_parsed_credentials: builtins.bool = ...,
        is_encrypted: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["appsettings", b"appsettings", "archive", b"archive", "chromium_cookies", b"chromium_cookies", "chromium_history", b"chromium_history", "chromium_logins", b"chromium_logins", "chromium_state_file", b"chromium_state_file", "data_type", b"data_type", "dotnet_assembly", b"dotnet_assembly", "dpapi_credential", b"dpapi_credential", "dpapi_masterkey", b"dpapi_masterkey", "error", b"error", "evtx_file", b"evtx_file", "group_policy_preferences", b"group_policy_preferences", "lnk", b"lnk", "mcafee_sitelist", b"mcafee_sitelist", "office_doc_new", b"office_doc_new", "office_doc_ole", b"office_doc_ole", "passwd", b"passwd", "pdf", b"pdf", "pe", b"pe", "raw_parsed_data", b"raw_parsed_data", "reg_hive_sam", b"reg_hive_sam", "reg_hive_security", b"reg_hive_security", "reg_hive_system", b"reg_hive_system", "shadow", b"shadow", "slack_downloads", b"slack_downloads", "slack_workspaces", b"slack_workspaces", "tomcat", b"tomcat", "web_config", b"web_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["appsettings", b"appsettings", "archive", b"archive", "chromium_cookies", b"chromium_cookies", "chromium_history", b"chromium_history", "chromium_logins", b"chromium_logins", "chromium_state_file", b"chromium_state_file", "data_type", b"data_type", "dotnet_assembly", b"dotnet_assembly", "dpapi_credential", b"dpapi_credential", "dpapi_masterkey", b"dpapi_masterkey", "error", b"error", "evtx_file", b"evtx_file", "group_policy_preferences", b"group_policy_preferences", "has_parsed_credentials", b"has_parsed_credentials", "is_encrypted", b"is_encrypted", "lnk", b"lnk", "mcafee_sitelist", b"mcafee_sitelist", "office_doc_new", b"office_doc_new", "office_doc_ole", b"office_doc_ole", "passwd", b"passwd", "pdf", b"pdf", "pe", b"pe", "raw_parsed_data", b"raw_parsed_data", "reg_hive_sam", b"reg_hive_sam", "reg_hive_security", b"reg_hive_security", "reg_hive_system", b"reg_hive_system", "shadow", b"shadow", "slack_downloads", b"slack_downloads", "slack_workspaces", b"slack_workspaces", "tomcat", b"tomcat", "web_config", b"web_config"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["data_type", b"data_type"]) -> typing_extensions.Literal["error", "pe", "dotnet_assembly", "passwd", "shadow", "office_doc_new", "office_doc_ole", "pdf", "group_policy_preferences", "mcafee_sitelist", "web_config", "appsettings", "tomcat", "archive", "lnk", "raw_parsed_data", "dpapi_masterkey", "dpapi_credential", "chromium_history", "chromium_logins", "chromium_cookies", "chromium_state_file", "slack_downloads", "slack_workspaces", "reg_hive_system", "reg_hive_security", "reg_hive_sam", "evtx_file"] | None: ...

global___ParsedData = ParsedData

@typing_extensions.final
class DotnetAnalysis(google.protobuf.message.Message):
    """//////////////////////////////////////////////////

    Analysis messages

    //////////////////////////////////////////////////
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class GadgetCall(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        GADGET_NAME_FIELD_NUMBER: builtins.int
        METHOD_NAME_FIELD_NUMBER: builtins.int
        FILTER_LEVEL_FIELD_NUMBER: builtins.int
        gadget_name: builtins.str
        method_name: builtins.str
        filter_level: builtins.str
        def __init__(
            self,
            *,
            gadget_name: builtins.str = ...,
            method_name: builtins.str = ...,
            filter_level: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["filter_level", b"filter_level", "gadget_name", b"gadget_name", "method_name", b"method_name"]) -> None: ...

    HAS_DESERIALIZATION_FIELD_NUMBER: builtins.int
    HAS_CMD_EXECUTION_FIELD_NUMBER: builtins.int
    HAS_REMOTING_FIELD_NUMBER: builtins.int
    REMOTING_CHANNELS_FIELD_NUMBER: builtins.int
    IS_WCF_SERVER_FIELD_NUMBER: builtins.int
    IS_WCF_CLIENT_FIELD_NUMBER: builtins.int
    SERIALIZATION_GADGET_CALLS_FIELD_NUMBER: builtins.int
    WCF_SERVER_CALLS_FIELD_NUMBER: builtins.int
    CLIENT_CALLS_FIELD_NUMBER: builtins.int
    REMOTING_CALLS_FIELD_NUMBER: builtins.int
    CMD_EXECUTION_CALLS_FIELD_NUMBER: builtins.int
    has_deserialization: builtins.bool
    has_cmd_execution: builtins.bool
    has_remoting: builtins.bool
    @property
    def remoting_channels(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    is_wcf_server: builtins.bool
    is_wcf_client: builtins.bool
    @property
    def serialization_gadget_calls(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DotnetAnalysis.GadgetCall]: ...
    @property
    def wcf_server_calls(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DotnetAnalysis.GadgetCall]: ...
    @property
    def client_calls(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DotnetAnalysis.GadgetCall]: ...
    @property
    def remoting_calls(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DotnetAnalysis.GadgetCall]: ...
    @property
    def cmd_execution_calls(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DotnetAnalysis.GadgetCall]: ...
    def __init__(
        self,
        *,
        has_deserialization: builtins.bool = ...,
        has_cmd_execution: builtins.bool = ...,
        has_remoting: builtins.bool = ...,
        remoting_channels: collections.abc.Iterable[builtins.str] | None = ...,
        is_wcf_server: builtins.bool = ...,
        is_wcf_client: builtins.bool = ...,
        serialization_gadget_calls: collections.abc.Iterable[global___DotnetAnalysis.GadgetCall] | None = ...,
        wcf_server_calls: collections.abc.Iterable[global___DotnetAnalysis.GadgetCall] | None = ...,
        client_calls: collections.abc.Iterable[global___DotnetAnalysis.GadgetCall] | None = ...,
        remoting_calls: collections.abc.Iterable[global___DotnetAnalysis.GadgetCall] | None = ...,
        cmd_execution_calls: collections.abc.Iterable[global___DotnetAnalysis.GadgetCall] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["client_calls", b"client_calls", "cmd_execution_calls", b"cmd_execution_calls", "has_cmd_execution", b"has_cmd_execution", "has_deserialization", b"has_deserialization", "has_remoting", b"has_remoting", "is_wcf_client", b"is_wcf_client", "is_wcf_server", b"is_wcf_server", "remoting_calls", b"remoting_calls", "remoting_channels", b"remoting_channels", "serialization_gadget_calls", b"serialization_gadget_calls", "wcf_server_calls", b"wcf_server_calls"]) -> None: ...

global___DotnetAnalysis = DotnetAnalysis

@typing_extensions.final
class Analysis(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DOTNET_ANALYSIS_FIELD_NUMBER: builtins.int
    @property
    def dotnet_analysis(self) -> global___DotnetAnalysis: ...
    def __init__(
        self,
        *,
        dotnet_analysis: global___DotnetAnalysis | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["analysis_type", b"analysis_type", "dotnet_analysis", b"dotnet_analysis"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["analysis_type", b"analysis_type", "dotnet_analysis", b"dotnet_analysis"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["analysis_type", b"analysis_type"]) -> typing_extensions.Literal["dotnet_analysis"] | None: ...

global___Analysis = Analysis

@typing_extensions.final
class ChromiumHistoryEntry(google.protobuf.message.Message):
    """//////////////////////////////////////////////////

    Other internal Chromium messages

    //////////////////////////////////////////////////
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ORIGINATING_OBJECT_ID_FIELD_NUMBER: builtins.int
    USER_DATA_DIRECTORY_FIELD_NUMBER: builtins.int
    USERNAME_FIELD_NUMBER: builtins.int
    BROWSER_FIELD_NUMBER: builtins.int
    URL_FIELD_NUMBER: builtins.int
    TITLE_FIELD_NUMBER: builtins.int
    VISIT_COUNT_FIELD_NUMBER: builtins.int
    TYPED_COUNT_FIELD_NUMBER: builtins.int
    LAST_VISIT_TIME_FIELD_NUMBER: builtins.int
    originating_object_id: builtins.str
    user_data_directory: builtins.str
    username: builtins.str
    browser: builtins.str
    url: builtins.str
    title: builtins.str
    visit_count: builtins.int
    typed_count: builtins.int
    @property
    def last_visit_time(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        originating_object_id: builtins.str = ...,
        user_data_directory: builtins.str = ...,
        username: builtins.str = ...,
        browser: builtins.str = ...,
        url: builtins.str = ...,
        title: builtins.str = ...,
        visit_count: builtins.int = ...,
        typed_count: builtins.int = ...,
        last_visit_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["last_visit_time", b"last_visit_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["browser", b"browser", "last_visit_time", b"last_visit_time", "originating_object_id", b"originating_object_id", "title", b"title", "typed_count", b"typed_count", "url", b"url", "user_data_directory", b"user_data_directory", "username", b"username", "visit_count", b"visit_count"]) -> None: ...

global___ChromiumHistoryEntry = ChromiumHistoryEntry

@typing_extensions.final
class ChromiumHistoryMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___Metadata: ...
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ChromiumHistoryEntry]: ...
    def __init__(
        self,
        *,
        metadata: global___Metadata | None = ...,
        data: collections.abc.Iterable[global___ChromiumHistoryEntry] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "metadata", b"metadata"]) -> None: ...

global___ChromiumHistoryMessage = ChromiumHistoryMessage

@typing_extensions.final
class ChromiumDownload(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ORIGINATING_OBJECT_ID_FIELD_NUMBER: builtins.int
    USER_DATA_DIRECTORY_FIELD_NUMBER: builtins.int
    USERNAME_FIELD_NUMBER: builtins.int
    BROWSER_FIELD_NUMBER: builtins.int
    URL_FIELD_NUMBER: builtins.int
    DOWNLOAD_PATH_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    TOTAL_BYTES_FIELD_NUMBER: builtins.int
    DANGER_TYPE_FIELD_NUMBER: builtins.int
    originating_object_id: builtins.str
    user_data_directory: builtins.str
    username: builtins.str
    browser: builtins.str
    url: builtins.str
    download_path: builtins.str
    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    total_bytes: builtins.int
    danger_type: builtins.str
    def __init__(
        self,
        *,
        originating_object_id: builtins.str = ...,
        user_data_directory: builtins.str = ...,
        username: builtins.str = ...,
        browser: builtins.str = ...,
        url: builtins.str = ...,
        download_path: builtins.str = ...,
        start_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        end_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        total_bytes: builtins.int = ...,
        danger_type: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["end_time", b"end_time", "start_time", b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["browser", b"browser", "danger_type", b"danger_type", "download_path", b"download_path", "end_time", b"end_time", "originating_object_id", b"originating_object_id", "start_time", b"start_time", "total_bytes", b"total_bytes", "url", b"url", "user_data_directory", b"user_data_directory", "username", b"username"]) -> None: ...

global___ChromiumDownload = ChromiumDownload

@typing_extensions.final
class ChromiumDownloadMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___Metadata: ...
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ChromiumDownload]: ...
    def __init__(
        self,
        *,
        metadata: global___Metadata | None = ...,
        data: collections.abc.Iterable[global___ChromiumDownload] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "metadata", b"metadata"]) -> None: ...

global___ChromiumDownloadMessage = ChromiumDownloadMessage

@typing_extensions.final
class ChromiumLogin(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ORIGINATING_OBJECT_ID_FIELD_NUMBER: builtins.int
    USER_DATA_DIRECTORY_FIELD_NUMBER: builtins.int
    USERNAME_FIELD_NUMBER: builtins.int
    BROWSER_FIELD_NUMBER: builtins.int
    ORIGIN_URL_FIELD_NUMBER: builtins.int
    USERNAME_VALUE_FIELD_NUMBER: builtins.int
    SIGNON_REALM_FIELD_NUMBER: builtins.int
    DATE_CREATED_FIELD_NUMBER: builtins.int
    DATE_LAST_USED_FIELD_NUMBER: builtins.int
    DATE_PASSWORD_MODIFIED_FIELD_NUMBER: builtins.int
    TIMES_USED_FIELD_NUMBER: builtins.int
    PASSWORD_VALUE_ENC_FIELD_NUMBER: builtins.int
    ENCRYPTION_TYPE_FIELD_NUMBER: builtins.int
    MASTERKEY_GUID_FIELD_NUMBER: builtins.int
    IS_DECRYPTED_FIELD_NUMBER: builtins.int
    PASSWORD_VALUE_DEC_FIELD_NUMBER: builtins.int
    originating_object_id: builtins.str
    user_data_directory: builtins.str
    username: builtins.str
    browser: builtins.str
    origin_url: builtins.str
    username_value: builtins.str
    signon_realm: builtins.str
    @property
    def date_created(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def date_last_used(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def date_password_modified(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    times_used: builtins.int
    password_value_enc: builtins.bytes
    encryption_type: builtins.str
    masterkey_guid: builtins.str
    is_decrypted: builtins.bool
    password_value_dec: builtins.str
    def __init__(
        self,
        *,
        originating_object_id: builtins.str = ...,
        user_data_directory: builtins.str = ...,
        username: builtins.str = ...,
        browser: builtins.str = ...,
        origin_url: builtins.str = ...,
        username_value: builtins.str = ...,
        signon_realm: builtins.str = ...,
        date_created: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        date_last_used: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        date_password_modified: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        times_used: builtins.int = ...,
        password_value_enc: builtins.bytes = ...,
        encryption_type: builtins.str = ...,
        masterkey_guid: builtins.str = ...,
        is_decrypted: builtins.bool = ...,
        password_value_dec: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["date_created", b"date_created", "date_last_used", b"date_last_used", "date_password_modified", b"date_password_modified"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["browser", b"browser", "date_created", b"date_created", "date_last_used", b"date_last_used", "date_password_modified", b"date_password_modified", "encryption_type", b"encryption_type", "is_decrypted", b"is_decrypted", "masterkey_guid", b"masterkey_guid", "origin_url", b"origin_url", "originating_object_id", b"originating_object_id", "password_value_dec", b"password_value_dec", "password_value_enc", b"password_value_enc", "signon_realm", b"signon_realm", "times_used", b"times_used", "user_data_directory", b"user_data_directory", "username", b"username", "username_value", b"username_value"]) -> None: ...

global___ChromiumLogin = ChromiumLogin

@typing_extensions.final
class ChromiumLoginMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___Metadata: ...
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ChromiumLogin]: ...
    def __init__(
        self,
        *,
        metadata: global___Metadata | None = ...,
        data: collections.abc.Iterable[global___ChromiumLogin] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "metadata", b"metadata"]) -> None: ...

global___ChromiumLoginMessage = ChromiumLoginMessage

@typing_extensions.final
class ChromiumCookie(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ORIGINATING_OBJECT_ID_FIELD_NUMBER: builtins.int
    USER_DATA_DIRECTORY_FIELD_NUMBER: builtins.int
    USERNAME_FIELD_NUMBER: builtins.int
    BROWSER_FIELD_NUMBER: builtins.int
    HOST_KEY_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PATH_FIELD_NUMBER: builtins.int
    CREATION_FIELD_NUMBER: builtins.int
    EXPIRES_FIELD_NUMBER: builtins.int
    LAST_ACCESS_FIELD_NUMBER: builtins.int
    LAST_UPDATE_FIELD_NUMBER: builtins.int
    IS_SECURE_FIELD_NUMBER: builtins.int
    IS_HTTPONLY_FIELD_NUMBER: builtins.int
    IS_SESSION_FIELD_NUMBER: builtins.int
    SAMESITE_FIELD_NUMBER: builtins.int
    SOURCE_PORT_FIELD_NUMBER: builtins.int
    VALUE_ENC_FIELD_NUMBER: builtins.int
    ENCRYPTION_TYPE_FIELD_NUMBER: builtins.int
    MASTERKEY_GUID_FIELD_NUMBER: builtins.int
    IS_DECRYPTED_FIELD_NUMBER: builtins.int
    VALUE_DEC_FIELD_NUMBER: builtins.int
    CLASSIFICATION_FIELD_NUMBER: builtins.int
    originating_object_id: builtins.str
    user_data_directory: builtins.str
    username: builtins.str
    browser: builtins.str
    host_key: builtins.str
    name: builtins.str
    path: builtins.str
    @property
    def creation(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def expires(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def last_access(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def last_update(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    is_secure: builtins.bool
    is_httponly: builtins.bool
    is_session: builtins.bool
    samesite: builtins.str
    source_port: builtins.int
    value_enc: builtins.bytes
    encryption_type: builtins.str
    masterkey_guid: builtins.str
    is_decrypted: builtins.bool
    value_dec: builtins.str
    classification: builtins.str
    """added in enrichment"""
    def __init__(
        self,
        *,
        originating_object_id: builtins.str = ...,
        user_data_directory: builtins.str = ...,
        username: builtins.str = ...,
        browser: builtins.str = ...,
        host_key: builtins.str = ...,
        name: builtins.str = ...,
        path: builtins.str = ...,
        creation: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        expires: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        last_access: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        last_update: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        is_secure: builtins.bool = ...,
        is_httponly: builtins.bool = ...,
        is_session: builtins.bool = ...,
        samesite: builtins.str = ...,
        source_port: builtins.int = ...,
        value_enc: builtins.bytes = ...,
        encryption_type: builtins.str = ...,
        masterkey_guid: builtins.str = ...,
        is_decrypted: builtins.bool = ...,
        value_dec: builtins.str = ...,
        classification: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["creation", b"creation", "expires", b"expires", "last_access", b"last_access", "last_update", b"last_update"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["browser", b"browser", "classification", b"classification", "creation", b"creation", "encryption_type", b"encryption_type", "expires", b"expires", "host_key", b"host_key", "is_decrypted", b"is_decrypted", "is_httponly", b"is_httponly", "is_secure", b"is_secure", "is_session", b"is_session", "last_access", b"last_access", "last_update", b"last_update", "masterkey_guid", b"masterkey_guid", "name", b"name", "originating_object_id", b"originating_object_id", "path", b"path", "samesite", b"samesite", "source_port", b"source_port", "user_data_directory", b"user_data_directory", "username", b"username", "value_dec", b"value_dec", "value_enc", b"value_enc"]) -> None: ...

global___ChromiumCookie = ChromiumCookie

@typing_extensions.final
class ChromiumCookieMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___Metadata: ...
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ChromiumCookie]: ...
    def __init__(
        self,
        *,
        metadata: global___Metadata | None = ...,
        data: collections.abc.Iterable[global___ChromiumCookie] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "metadata", b"metadata"]) -> None: ...

global___ChromiumCookieMessage = ChromiumCookieMessage

@typing_extensions.final
class ChromiumStateFileMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___Metadata: ...
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ChromiumStateFile]: ...
    def __init__(
        self,
        *,
        metadata: global___Metadata | None = ...,
        data: collections.abc.Iterable[global___ChromiumStateFile] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "metadata", b"metadata"]) -> None: ...

global___ChromiumStateFileMessage = ChromiumStateFileMessage

@typing_extensions.final
class DpapiDomainBackupkey(google.protobuf.message.Message):
    """//////////////////////////////////////////////////

    DPAPI

    //////////////////////////////////////////////////
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DOMAIN_BACKUPKEY_GUID_FIELD_NUMBER: builtins.int
    DOMAIN_CONTROLLER_FIELD_NUMBER: builtins.int
    DOMAIN_BACKUPKEY_BYTES_FIELD_NUMBER: builtins.int
    domain_backupkey_guid: builtins.str
    """the unique GUID identifying the domain backup key"""
    domain_controller: builtins.str
    """the FQDN of the domain controller the backup key was retrieved from"""
    domain_backupkey_bytes: builtins.bytes
    """the actual bytes of the domain backupkey"""
    def __init__(
        self,
        *,
        domain_backupkey_guid: builtins.str = ...,
        domain_controller: builtins.str = ...,
        domain_backupkey_bytes: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["domain_backupkey_bytes", b"domain_backupkey_bytes", "domain_backupkey_guid", b"domain_backupkey_guid", "domain_controller", b"domain_controller"]) -> None: ...

global___DpapiDomainBackupkey = DpapiDomainBackupkey

@typing_extensions.final
class DpapiDomainBackupkeyMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___Metadata: ...
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DpapiDomainBackupkey]: ...
    def __init__(
        self,
        *,
        metadata: global___Metadata | None = ...,
        data: collections.abc.Iterable[global___DpapiDomainBackupkey] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "metadata", b"metadata"]) -> None: ...

global___DpapiDomainBackupkeyMessage = DpapiDomainBackupkeyMessage

@typing_extensions.final
class DpapiMasterkey(google.protobuf.message.Message):
    """also used in ParsedData"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OBJECT_ID_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    USERNAME_FIELD_NUMBER: builtins.int
    USER_SID_FIELD_NUMBER: builtins.int
    MASTERKEY_GUID_FIELD_NUMBER: builtins.int
    IS_DECRYPTED_FIELD_NUMBER: builtins.int
    MASTERKEY_BYTES_FIELD_NUMBER: builtins.int
    DOMAIN_BACKUPKEY_GUID_FIELD_NUMBER: builtins.int
    DOMAINKEY_PB_SECRET_FIELD_NUMBER: builtins.int
    DECRYPTED_KEY_FULL_FIELD_NUMBER: builtins.int
    DECRYPTED_KEY_SHA1_FIELD_NUMBER: builtins.int
    object_id: builtins.str
    """the Nemesis UUID returned by the web-api/file endpoint, also the name the file is stored as in S3"""
    type: builtins.str
    """whether this is a "domain_user, "local_user", or "machine" masterkey"""
    username: builtins.str
    """the username the masterkey belongs to"""
    user_sid: builtins.str
    """the SID of the user the masterkey belongs to"""
    masterkey_guid: builtins.str
    """the GUID that identifies that masterkey"""
    is_decrypted: builtins.bool
    """true if the key has been decrypted"""
    masterkey_bytes: builtins.bytes
    """the raw bytes of the masterkey subkey"""
    domain_backupkey_guid: builtins.str
    """bytes backupkey_bytes = 8;
    bytes credhist_bytes = 9;

    GUID of the domain master/backup key
    """
    domainkey_pb_secret: builtins.bytes
    """bytes encrypted by the domain backup key"""
    decrypted_key_full: builtins.bytes
    """the full decrypted master key"""
    decrypted_key_sha1: builtins.bytes
    """the sha1 representation of the masterkey"""
    def __init__(
        self,
        *,
        object_id: builtins.str = ...,
        type: builtins.str = ...,
        username: builtins.str = ...,
        user_sid: builtins.str = ...,
        masterkey_guid: builtins.str = ...,
        is_decrypted: builtins.bool = ...,
        masterkey_bytes: builtins.bytes = ...,
        domain_backupkey_guid: builtins.str = ...,
        domainkey_pb_secret: builtins.bytes = ...,
        decrypted_key_full: builtins.bytes = ...,
        decrypted_key_sha1: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["decrypted_key_full", b"decrypted_key_full", "decrypted_key_sha1", b"decrypted_key_sha1", "domain_backupkey_guid", b"domain_backupkey_guid", "domainkey_pb_secret", b"domainkey_pb_secret", "is_decrypted", b"is_decrypted", "masterkey_bytes", b"masterkey_bytes", "masterkey_guid", b"masterkey_guid", "object_id", b"object_id", "type", b"type", "user_sid", b"user_sid", "username", b"username"]) -> None: ...

global___DpapiMasterkey = DpapiMasterkey

@typing_extensions.final
class DpapiMasterkeyMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___Metadata: ...
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DpapiMasterkey]: ...
    def __init__(
        self,
        *,
        metadata: global___Metadata | None = ...,
        data: collections.abc.Iterable[global___DpapiMasterkey] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "metadata", b"metadata"]) -> None: ...

global___DpapiMasterkeyMessage = DpapiMasterkeyMessage

@typing_extensions.final
class DpapiBlob(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DPAPI_BLOB_ID_FIELD_NUMBER: builtins.int
    ORIGINATING_OBJECT_ID_FIELD_NUMBER: builtins.int
    ORIGINATING_REGISTRY_ID_FIELD_NUMBER: builtins.int
    MASTERKEY_GUID_FIELD_NUMBER: builtins.int
    IS_FILE_FIELD_NUMBER: builtins.int
    IS_DECRYPTED_FIELD_NUMBER: builtins.int
    ENC_DATA_BYTES_FIELD_NUMBER: builtins.int
    ENC_DATA_OBJECT_ID_FIELD_NUMBER: builtins.int
    DEC_DATA_BYTES_FIELD_NUMBER: builtins.int
    DEC_DATA_OBJECT_ID_FIELD_NUMBER: builtins.int
    dpapi_blob_id: builtins.str
    """unique identifier so originating documents can keep track of which DPAPI blobs were extracted from it
     in this case this ID does NOT refer to a file in S3
    """
    originating_object_id: builtins.str
    """the Nemesis UUID referencing the original file the dpapi blob was extracted from"""
    originating_registry_id: builtins.str
    """the Nemesis UUID referencing the registry key the dpapi blob was extracted from"""
    masterkey_guid: builtins.str
    """the GUID of the masterkey for the blob"""
    is_file: builtins.bool
    """true if enc_data/dec_data are references to a binary submission (UUID in S3)"""
    is_decrypted: builtins.bool
    """true if the dpapi blob has been decrypted"""
    enc_data_bytes: builtins.bytes
    """If the encrypted data is < 1024 bytes it will be stored as bytes in this field"""
    enc_data_object_id: builtins.str
    """If the encrypted data is > 1024 bytes it will be will be stored in S3 as a UUID file"""
    dec_data_bytes: builtins.bytes
    """If the decrypted data is < 1024 bytes it will be stored as bytes in this field"""
    dec_data_object_id: builtins.str
    """If the decrypted data is > 1024 bytes it will be will be stored in S3 as a UUID file"""
    def __init__(
        self,
        *,
        dpapi_blob_id: builtins.str = ...,
        originating_object_id: builtins.str = ...,
        originating_registry_id: builtins.str = ...,
        masterkey_guid: builtins.str = ...,
        is_file: builtins.bool = ...,
        is_decrypted: builtins.bool = ...,
        enc_data_bytes: builtins.bytes = ...,
        enc_data_object_id: builtins.str = ...,
        dec_data_bytes: builtins.bytes = ...,
        dec_data_object_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dec_data_bytes", b"dec_data_bytes", "dec_data_object_id", b"dec_data_object_id", "dpapi_blob_id", b"dpapi_blob_id", "enc_data_bytes", b"enc_data_bytes", "enc_data_object_id", b"enc_data_object_id", "is_decrypted", b"is_decrypted", "is_file", b"is_file", "masterkey_guid", b"masterkey_guid", "originating_object_id", b"originating_object_id", "originating_registry_id", b"originating_registry_id"]) -> None: ...

global___DpapiBlob = DpapiBlob

@typing_extensions.final
class DpapiBlobMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___Metadata: ...
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DpapiBlob]: ...
    def __init__(
        self,
        *,
        metadata: global___Metadata | None = ...,
        data: collections.abc.Iterable[global___DpapiBlob] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "metadata", b"metadata"]) -> None: ...

global___DpapiBlobMessage = DpapiBlobMessage

@typing_extensions.final
class ServiceEnriched(google.protobuf.message.Message):
    """//////////////////////////////////////////////////

    Internal "enriched" schema messages

    //////////////////////////////////////////////////
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ORIGIN_FIELD_NUMBER: builtins.int
    CATEGORY_FIELD_NUMBER: builtins.int
    ENRICHMENTS_SUCCESS_FIELD_NUMBER: builtins.int
    ENRICHMENTS_FAILURE_FIELD_NUMBER: builtins.int
    @property
    def origin(self) -> global___ServiceIngestion:
        """Original service data ingested"""
    category: builtins.str
    """Categorization information about the service"""
    @property
    def enrichments_success(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Enrichments that ran and succeeded"""
    @property
    def enrichments_failure(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Enrichments that ran but failed"""
    def __init__(
        self,
        *,
        origin: global___ServiceIngestion | None = ...,
        category: builtins.str = ...,
        enrichments_success: collections.abc.Iterable[builtins.str] | None = ...,
        enrichments_failure: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["origin", b"origin"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["category", b"category", "enrichments_failure", b"enrichments_failure", "enrichments_success", b"enrichments_success", "origin", b"origin"]) -> None: ...

global___ServiceEnriched = ServiceEnriched

@typing_extensions.final
class ServiceEnrichedMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___Metadata: ...
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ServiceEnriched]: ...
    def __init__(
        self,
        *,
        metadata: global___Metadata | None = ...,
        data: collections.abc.Iterable[global___ServiceEnriched] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "metadata", b"metadata"]) -> None: ...

global___ServiceEnrichedMessage = ServiceEnrichedMessage

@typing_extensions.final
class ProcessCategory(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CATEGORY_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    category: builtins.str
    """The category of the type of process (AV, EDR, infrastructure, etc.)"""
    description: builtins.str
    """A description of process"""
    def __init__(
        self,
        *,
        category: builtins.str = ...,
        description: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_description", b"_description", "description", b"description"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_description", b"_description", "category", b"category", "description", b"description"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description", b"_description"]) -> typing_extensions.Literal["description"] | None: ...

global___ProcessCategory = ProcessCategory

@typing_extensions.final
class ProcessEnriched(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ORIGIN_FIELD_NUMBER: builtins.int
    CATEGORY_FIELD_NUMBER: builtins.int
    ENRICHMENTS_SUCCESS_FIELD_NUMBER: builtins.int
    ENRICHMENTS_FAILURE_FIELD_NUMBER: builtins.int
    @property
    def origin(self) -> global___ProcessIngestion:
        """Original process data ingested"""
    @property
    def category(self) -> global___ProcessCategory:
        """Categorization information about the process"""
    @property
    def enrichments_success(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Enrichments that ran and succeeded"""
    @property
    def enrichments_failure(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Enrichments that ran but failed"""
    def __init__(
        self,
        *,
        origin: global___ProcessIngestion | None = ...,
        category: global___ProcessCategory | None = ...,
        enrichments_success: collections.abc.Iterable[builtins.str] | None = ...,
        enrichments_failure: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["category", b"category", "origin", b"origin"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["category", b"category", "enrichments_failure", b"enrichments_failure", "enrichments_success", b"enrichments_success", "origin", b"origin"]) -> None: ...

global___ProcessEnriched = ProcessEnriched

@typing_extensions.final
class ProcessEnrichedMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___Metadata: ...
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ProcessEnriched]: ...
    def __init__(
        self,
        *,
        metadata: global___Metadata | None = ...,
        data: collections.abc.Iterable[global___ProcessEnriched] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "metadata", b"metadata"]) -> None: ...

global___ProcessEnrichedMessage = ProcessEnrichedMessage

@typing_extensions.final
class NoseyParker(google.protobuf.message.Message):
    """Protobuf representation of NoseyParker JSON output"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class Offset_span(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        START_FIELD_NUMBER: builtins.int
        END_FIELD_NUMBER: builtins.int
        start: builtins.int
        end: builtins.int
        def __init__(
            self,
            *,
            start: builtins.int = ...,
            end: builtins.int = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["end", b"end", "start", b"start"]) -> None: ...

    @typing_extensions.final
    class Start(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        LINE_FIELD_NUMBER: builtins.int
        COLUMN_FIELD_NUMBER: builtins.int
        line: builtins.int
        column: builtins.int
        def __init__(
            self,
            *,
            line: builtins.int = ...,
            column: builtins.int = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["column", b"column", "line", b"line"]) -> None: ...

    @typing_extensions.final
    class End(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        LINE_FIELD_NUMBER: builtins.int
        COLUMN_FIELD_NUMBER: builtins.int
        line: builtins.int
        column: builtins.int
        def __init__(
            self,
            *,
            line: builtins.int = ...,
            column: builtins.int = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["column", b"column", "line", b"line"]) -> None: ...

    @typing_extensions.final
    class Source_span(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        START_FIELD_NUMBER: builtins.int
        END_FIELD_NUMBER: builtins.int
        @property
        def start(self) -> global___NoseyParker.Start: ...
        @property
        def end(self) -> global___NoseyParker.End: ...
        def __init__(
            self,
            *,
            start: global___NoseyParker.Start | None = ...,
            end: global___NoseyParker.End | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["end", b"end", "start", b"start"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["end", b"end", "start", b"start"]) -> None: ...

    @typing_extensions.final
    class Location(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        OFFSET_SPAN_FIELD_NUMBER: builtins.int
        SOURCE_SPAN_FIELD_NUMBER: builtins.int
        @property
        def offset_span(self) -> global___NoseyParker.Offset_span: ...
        @property
        def source_span(self) -> global___NoseyParker.Source_span: ...
        def __init__(
            self,
            *,
            offset_span: global___NoseyParker.Offset_span | None = ...,
            source_span: global___NoseyParker.Source_span | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["offset_span", b"offset_span", "source_span", b"source_span"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["offset_span", b"offset_span", "source_span", b"source_span"]) -> None: ...

    @typing_extensions.final
    class Snippet(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        BEFORE_FIELD_NUMBER: builtins.int
        MATCHING_FIELD_NUMBER: builtins.int
        AFTER_FIELD_NUMBER: builtins.int
        before: builtins.str
        matching: builtins.str
        after: builtins.str
        def __init__(
            self,
            *,
            before: builtins.str = ...,
            matching: builtins.str = ...,
            after: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["after", b"after", "before", b"before", "matching", b"matching"]) -> None: ...

    @typing_extensions.final
    class Provenance(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KIND_FIELD_NUMBER: builtins.int
        PATH_FIELD_NUMBER: builtins.int
        kind: builtins.str
        path: builtins.str
        def __init__(
            self,
            *,
            kind: builtins.str = ...,
            path: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["kind", b"kind", "path", b"path"]) -> None: ...

    @typing_extensions.final
    class BlobMetadata(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        CHARSET_FIELD_NUMBER: builtins.int
        ID_FIELD_NUMBER: builtins.int
        MIME_ESSENCE_FIELD_NUMBER: builtins.int
        NUM_BYTES_FIELD_NUMBER: builtins.int
        charset: builtins.str
        id: builtins.str
        mime_essence: builtins.str
        num_bytes: builtins.int
        def __init__(
            self,
            *,
            charset: builtins.str = ...,
            id: builtins.str = ...,
            mime_essence: builtins.str = ...,
            num_bytes: builtins.int = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["charset", b"charset", "id", b"id", "mime_essence", b"mime_essence", "num_bytes", b"num_bytes"]) -> None: ...

    @typing_extensions.final
    class Matches(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        BLOB_ID_FIELD_NUMBER: builtins.int
        BLOB_METADATA_FIELD_NUMBER: builtins.int
        LOCATION_FIELD_NUMBER: builtins.int
        CAPTURE_GROUP_INDEX_FIELD_NUMBER: builtins.int
        MATCH_CONTENT_FIELD_NUMBER: builtins.int
        SNIPPET_FIELD_NUMBER: builtins.int
        RULE_NAME_FIELD_NUMBER: builtins.int
        PROVENANCE_FIELD_NUMBER: builtins.int
        blob_id: builtins.str
        @property
        def blob_metadata(self) -> global___NoseyParker.BlobMetadata: ...
        @property
        def location(self) -> global___NoseyParker.Location: ...
        capture_group_index: builtins.int
        match_content: builtins.str
        @property
        def snippet(self) -> global___NoseyParker.Snippet: ...
        rule_name: builtins.str
        @property
        def provenance(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NoseyParker.Provenance]: ...
        def __init__(
            self,
            *,
            blob_id: builtins.str = ...,
            blob_metadata: global___NoseyParker.BlobMetadata | None = ...,
            location: global___NoseyParker.Location | None = ...,
            capture_group_index: builtins.int = ...,
            match_content: builtins.str = ...,
            snippet: global___NoseyParker.Snippet | None = ...,
            rule_name: builtins.str = ...,
            provenance: collections.abc.Iterable[global___NoseyParker.Provenance] | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["blob_metadata", b"blob_metadata", "location", b"location", "snippet", b"snippet"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["blob_id", b"blob_id", "blob_metadata", b"blob_metadata", "capture_group_index", b"capture_group_index", "location", b"location", "match_content", b"match_content", "provenance", b"provenance", "rule_name", b"rule_name", "snippet", b"snippet"]) -> None: ...

    @typing_extensions.final
    class RuleMatches(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        RULE_NAME_FIELD_NUMBER: builtins.int
        NUM_MATCHES_FIELD_NUMBER: builtins.int
        COMMENT_FIELD_NUMBER: builtins.int
        STATUS_FIELD_NUMBER: builtins.int
        TYPE_FIELD_NUMBER: builtins.int
        MATCH_CONTENT_FIELD_NUMBER: builtins.int
        MATCHES_FIELD_NUMBER: builtins.int
        rule_name: builtins.str
        num_matches: builtins.int
        comment: builtins.str
        status: builtins.str
        type: builtins.str
        match_content: builtins.str
        @property
        def matches(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NoseyParker.Matches]: ...
        def __init__(
            self,
            *,
            rule_name: builtins.str = ...,
            num_matches: builtins.int = ...,
            comment: builtins.str = ...,
            status: builtins.str = ...,
            type: builtins.str = ...,
            match_content: builtins.str = ...,
            matches: collections.abc.Iterable[global___NoseyParker.Matches] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["comment", b"comment", "match_content", b"match_content", "matches", b"matches", "num_matches", b"num_matches", "rule_name", b"rule_name", "status", b"status", "type", b"type"]) -> None: ...

    RULE_MATCHES_FIELD_NUMBER: builtins.int
    HAS_MATCHES_FIELD_NUMBER: builtins.int
    @property
    def rule_matches(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NoseyParker.RuleMatches]: ...
    has_matches: builtins.bool
    def __init__(
        self,
        *,
        rule_matches: collections.abc.Iterable[global___NoseyParker.RuleMatches] | None = ...,
        has_matches: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["has_matches", b"has_matches", "rule_matches", b"rule_matches"]) -> None: ...

global___NoseyParker = NoseyParker

@typing_extensions.final
class YaraMatches(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class YaraStringMatchInstance(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        MATCHED_DATA_FIELD_NUMBER: builtins.int
        OFFSET_FIELD_NUMBER: builtins.int
        LENGTH_FIELD_NUMBER: builtins.int
        matched_data: builtins.bytes
        """bytes so we can decode UTF8/UTF16 as appropriate later"""
        offset: builtins.int
        length: builtins.int
        def __init__(
            self,
            *,
            matched_data: builtins.bytes = ...,
            offset: builtins.int = ...,
            length: builtins.int = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["length", b"length", "matched_data", b"matched_data", "offset", b"offset"]) -> None: ...

    @typing_extensions.final
    class YaraStringMatch(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        IDENTIFIER_FIELD_NUMBER: builtins.int
        YARA_STRING_MATCH_INSTANCES_FIELD_NUMBER: builtins.int
        identifier: builtins.str
        @property
        def yara_string_match_instances(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___YaraMatches.YaraStringMatchInstance]: ...
        def __init__(
            self,
            *,
            identifier: builtins.str = ...,
            yara_string_match_instances: collections.abc.Iterable[global___YaraMatches.YaraStringMatchInstance] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["identifier", b"identifier", "yara_string_match_instances", b"yara_string_match_instances"]) -> None: ...

    @typing_extensions.final
    class YaraMatch(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        RULE_FILE_FIELD_NUMBER: builtins.int
        RULE_NAME_FIELD_NUMBER: builtins.int
        RULE_DESCRIPTION_FIELD_NUMBER: builtins.int
        RULE_TEXT_FIELD_NUMBER: builtins.int
        RULE_STRING_MATCHES_FIELD_NUMBER: builtins.int
        rule_file: builtins.str
        rule_name: builtins.str
        rule_description: builtins.str
        rule_text: builtins.str
        @property
        def rule_string_matches(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___YaraMatches.YaraStringMatch]: ...
        def __init__(
            self,
            *,
            rule_file: builtins.str = ...,
            rule_name: builtins.str = ...,
            rule_description: builtins.str = ...,
            rule_text: builtins.str = ...,
            rule_string_matches: collections.abc.Iterable[global___YaraMatches.YaraStringMatch] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["rule_description", b"rule_description", "rule_file", b"rule_file", "rule_name", b"rule_name", "rule_string_matches", b"rule_string_matches", "rule_text", b"rule_text"]) -> None: ...

    YARA_MATCHES_PRESENT_FIELD_NUMBER: builtins.int
    YARA_MATCHES_FIELD_NUMBER: builtins.int
    yara_matches_present: builtins.bool
    @property
    def yara_matches(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___YaraMatches.YaraMatch]: ...
    def __init__(
        self,
        *,
        yara_matches_present: builtins.bool = ...,
        yara_matches: collections.abc.Iterable[global___YaraMatches.YaraMatch] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["yara_matches", b"yara_matches", "yara_matches_present", b"yara_matches_present"]) -> None: ...

global___YaraMatches = YaraMatches

@typing_extensions.final
class Canaries(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class Canary(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        TYPE_FIELD_NUMBER: builtins.int
        DATA_FIELD_NUMBER: builtins.int
        type: builtins.str
        @property
        def data(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
        def __init__(
            self,
            *,
            type: builtins.str = ...,
            data: collections.abc.Iterable[builtins.str] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "type", b"type"]) -> None: ...

    CANARIES_PRESENT_FIELD_NUMBER: builtins.int
    CANARIES_FIELD_NUMBER: builtins.int
    canaries_present: builtins.bool
    @property
    def canaries(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Canaries.Canary]: ...
    def __init__(
        self,
        *,
        canaries_present: builtins.bool = ...,
        canaries: collections.abc.Iterable[global___Canaries.Canary] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["canaries", b"canaries", "canaries_present", b"canaries_present"]) -> None: ...

global___Canaries = Canaries

@typing_extensions.final
class FileHashes(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MD5_FIELD_NUMBER: builtins.int
    SHA1_FIELD_NUMBER: builtins.int
    SHA256_FIELD_NUMBER: builtins.int
    md5: builtins.str
    sha1: builtins.str
    sha256: builtins.str
    def __init__(
        self,
        *,
        md5: builtins.str = ...,
        sha1: builtins.str = ...,
        sha256: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["md5", b"md5", "sha1", b"sha1", "sha256", b"sha256"]) -> None: ...

global___FileHashes = FileHashes

@typing_extensions.final
class FileDataEnriched(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OBJECT_ID_FIELD_NUMBER: builtins.int
    ORIGINATING_OBJECT_ID_FIELD_NUMBER: builtins.int
    ENRICHMENTS_SUCCESS_FIELD_NUMBER: builtins.int
    ENRICHMENTS_FAILURE_FIELD_NUMBER: builtins.int
    PATH_FIELD_NUMBER: builtins.int
    SIZE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    EXTENSION_FIELD_NUMBER: builtins.int
    HASHES_FIELD_NUMBER: builtins.int
    NEMESIS_FILE_TYPE_FIELD_NUMBER: builtins.int
    MAGIC_TYPE_FIELD_NUMBER: builtins.int
    IS_BINARY_FIELD_NUMBER: builtins.int
    IS_SOURCE_CODE_FIELD_NUMBER: builtins.int
    IS_OFFICE_DOC_FIELD_NUMBER: builtins.int
    PARSED_DATA_FIELD_NUMBER: builtins.int
    ANALYSIS_FIELD_NUMBER: builtins.int
    CONVERTED_PDF_FIELD_NUMBER: builtins.int
    EXTRACTED_PLAINTEXT_FIELD_NUMBER: builtins.int
    EXTRACTED_SOURCE_FIELD_NUMBER: builtins.int
    NOSEYPARKER_FIELD_NUMBER: builtins.int
    YARA_MATCHES_FIELD_NUMBER: builtins.int
    CANARIES_FIELD_NUMBER: builtins.int
    CONTAINS_DPAPI_FIELD_NUMBER: builtins.int
    DPAPI_BLOBS_FIELD_NUMBER: builtins.int
    object_id: builtins.str
    """the Nemesis UUID returned by the web-api/file endpoint, also the name the file is stored as in S3"""
    originating_object_id: builtins.str
    """If the file was extracted from another existing file in Nemesis (e.g., a zip or jar),
      this optional field is the Nemesis UUID referencing the original file
    """
    @property
    def enrichments_success(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Enrichments that ran and succeeded"""
    @property
    def enrichments_failure(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Enrichments that ran but failed"""
    path: builtins.str
    """The path must be in a UNC, file system, or mapped path format. File system and mapped paths must be
    absolute and use forward slashes for separators (e.g. /).
    """
    size: builtins.int
    """Size of the file, in bytes"""
    name: builtins.str
    """The base file name"""
    extension: builtins.str
    """The file extension"""
    @property
    def hashes(self) -> global___FileHashes:
        """Various hashes for the file"""
    nemesis_file_type: builtins.str
    """The "Nemesis file type", i.e. any format defined in /cmd/file-processor/file_types/"""
    magic_type: builtins.str
    """The magic mime type returned from libmagic (a la the `file` command)"""
    is_binary: builtins.bool
    """True if the file is binary, False if it's text"""
    is_source_code: builtins.bool
    """True if the file is a supported source code file extension"""
    is_office_doc: builtins.bool
    """True if the file is an office form consumed by Tika for text extraction"""
    @property
    def parsed_data(self) -> global___ParsedData:
        """any Nemesis-specific data parsed from the file"""
    @property
    def analysis(self) -> global___Analysis:
        """any file analysis (e.g., dotnet analysis)"""
    converted_pdf: builtins.str
    """if the document was converted to a PDF, this is the Nemesis object_id/UUID referring to that file in S3"""
    extracted_plaintext: builtins.str
    """if the document had plaintext extracted, this is the Nemesis object_id/UUID referring to that file in S3"""
    extracted_source: builtins.str
    """if the binary had source code extracted (i.e., .NET decompilation), this is the Nemesis object_id/UUID referring to that file in S3"""
    @property
    def noseyparker(self) -> global___NoseyParker:
        """any NoseyParker results if this file wasn't binary"""
    @property
    def yara_matches(self) -> global___YaraMatches:
        """any Yara rule matches"""
    @property
    def canaries(self) -> global___Canaries:
        """possible document canaries"""
    contains_dpapi: builtins.bool
    """true if the file contains DPAPI data"""
    @property
    def dpapi_blobs(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """one or more object_id's that refer to DpapiBlob structures that were extracted from this file"""
    def __init__(
        self,
        *,
        object_id: builtins.str = ...,
        originating_object_id: builtins.str = ...,
        enrichments_success: collections.abc.Iterable[builtins.str] | None = ...,
        enrichments_failure: collections.abc.Iterable[builtins.str] | None = ...,
        path: builtins.str = ...,
        size: builtins.int = ...,
        name: builtins.str = ...,
        extension: builtins.str = ...,
        hashes: global___FileHashes | None = ...,
        nemesis_file_type: builtins.str = ...,
        magic_type: builtins.str = ...,
        is_binary: builtins.bool = ...,
        is_source_code: builtins.bool = ...,
        is_office_doc: builtins.bool = ...,
        parsed_data: global___ParsedData | None = ...,
        analysis: global___Analysis | None = ...,
        converted_pdf: builtins.str = ...,
        extracted_plaintext: builtins.str | None = ...,
        extracted_source: builtins.str = ...,
        noseyparker: global___NoseyParker | None = ...,
        yara_matches: global___YaraMatches | None = ...,
        canaries: global___Canaries | None = ...,
        contains_dpapi: builtins.bool = ...,
        dpapi_blobs: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_extracted_plaintext", b"_extracted_plaintext", "analysis", b"analysis", "canaries", b"canaries", "extracted_plaintext", b"extracted_plaintext", "hashes", b"hashes", "noseyparker", b"noseyparker", "parsed_data", b"parsed_data", "yara_matches", b"yara_matches"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_extracted_plaintext", b"_extracted_plaintext", "analysis", b"analysis", "canaries", b"canaries", "contains_dpapi", b"contains_dpapi", "converted_pdf", b"converted_pdf", "dpapi_blobs", b"dpapi_blobs", "enrichments_failure", b"enrichments_failure", "enrichments_success", b"enrichments_success", "extension", b"extension", "extracted_plaintext", b"extracted_plaintext", "extracted_source", b"extracted_source", "hashes", b"hashes", "is_binary", b"is_binary", "is_office_doc", b"is_office_doc", "is_source_code", b"is_source_code", "magic_type", b"magic_type", "name", b"name", "nemesis_file_type", b"nemesis_file_type", "noseyparker", b"noseyparker", "object_id", b"object_id", "originating_object_id", b"originating_object_id", "parsed_data", b"parsed_data", "path", b"path", "size", b"size", "yara_matches", b"yara_matches"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_extracted_plaintext", b"_extracted_plaintext"]) -> typing_extensions.Literal["extracted_plaintext"] | None: ...

global___FileDataEnriched = FileDataEnriched

@typing_extensions.final
class FileDataEnrichedMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___Metadata: ...
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FileDataEnriched]: ...
    def __init__(
        self,
        *,
        metadata: global___Metadata | None = ...,
        data: collections.abc.Iterable[global___FileDataEnriched] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "metadata", b"metadata"]) -> None: ...

global___FileDataEnrichedMessage = FileDataEnrichedMessage

@typing_extensions.final
class ExtractedHash(google.protobuf.message.Message):
    """Hashes extracted from processed files"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HASH_TYPE_FIELD_NUMBER: builtins.int
    HASH_VALUE_FIELD_NUMBER: builtins.int
    ORIGINATING_OBJECT_ID_FIELD_NUMBER: builtins.int
    HASHCAT_FORMATTED_VALUE_FIELD_NUMBER: builtins.int
    JTR_FORMATTED_VALUE_FIELD_NUMBER: builtins.int
    IS_CRACKED_FIELD_NUMBER: builtins.int
    JTR_POT_LINE_FIELD_NUMBER: builtins.int
    CHECKED_AGAINST_TOP_PASSWORDS_FIELD_NUMBER: builtins.int
    PLAINTEXT_VALUE_FIELD_NUMBER: builtins.int
    IS_SUBMITTED_TO_CRACKER_FIELD_NUMBER: builtins.int
    CRACKER_SUBMISSION_TIME_FIELD_NUMBER: builtins.int
    CRACKER_CRACKED_TIME_FIELD_NUMBER: builtins.int
    hash_type: builtins.str
    """md5/sha1/etc."""
    hash_value: builtins.str
    """actual hash data"""
    originating_object_id: builtins.str
    """the Nemesis UUID referencing the original file the hash was extracted from"""
    hashcat_formatted_value: builtins.str
    """hash value formatted for Hashcat"""
    jtr_formatted_value: builtins.str
    """hash value formatted for JohnTheRipper"""
    is_cracked: builtins.bool
    """whether the hash has been cracked"""
    jtr_pot_line: builtins.str
    """if cracked, the jtr pot value"""
    checked_against_top_passwords: builtins.bool
    """whether the value was checked against the top X passwords with JTR"""
    plaintext_value: builtins.str
    """if cracked, the plaintext value"""
    is_submitted_to_cracker: builtins.bool
    """not yet used"""
    @property
    def cracker_submission_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """not yet used"""
    @property
    def cracker_cracked_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """not yet used"""
    def __init__(
        self,
        *,
        hash_type: builtins.str = ...,
        hash_value: builtins.str = ...,
        originating_object_id: builtins.str = ...,
        hashcat_formatted_value: builtins.str = ...,
        jtr_formatted_value: builtins.str = ...,
        is_cracked: builtins.bool = ...,
        jtr_pot_line: builtins.str = ...,
        checked_against_top_passwords: builtins.bool = ...,
        plaintext_value: builtins.str = ...,
        is_submitted_to_cracker: builtins.bool = ...,
        cracker_submission_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        cracker_cracked_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cracker_cracked_time", b"cracker_cracked_time", "cracker_submission_time", b"cracker_submission_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["checked_against_top_passwords", b"checked_against_top_passwords", "cracker_cracked_time", b"cracker_cracked_time", "cracker_submission_time", b"cracker_submission_time", "hash_type", b"hash_type", "hash_value", b"hash_value", "hashcat_formatted_value", b"hashcat_formatted_value", "is_cracked", b"is_cracked", "is_submitted_to_cracker", b"is_submitted_to_cracker", "jtr_formatted_value", b"jtr_formatted_value", "jtr_pot_line", b"jtr_pot_line", "originating_object_id", b"originating_object_id", "plaintext_value", b"plaintext_value"]) -> None: ...

global___ExtractedHash = ExtractedHash

@typing_extensions.final
class ExtractedHashMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___Metadata: ...
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ExtractedHash]: ...
    def __init__(
        self,
        *,
        metadata: global___Metadata | None = ...,
        data: collections.abc.Iterable[global___ExtractedHash] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "metadata", b"metadata"]) -> None: ...

global___ExtractedHashMessage = ExtractedHashMessage

@typing_extensions.final
class FileDataPlaintext(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OBJECT_ID_FIELD_NUMBER: builtins.int
    ENRICHMENTS_SUCCESS_FIELD_NUMBER: builtins.int
    ENRICHMENTS_FAILURE_FIELD_NUMBER: builtins.int
    ORIGINATING_OBJECT_ID_FIELD_NUMBER: builtins.int
    ORIGINATING_OBJECT_CONVERTED_PDF_FIELD_NUMBER: builtins.int
    ORIGINATING_OBJECT_PATH_FIELD_NUMBER: builtins.int
    ORIGINATING_OBJECT_SIZE_FIELD_NUMBER: builtins.int
    SIZE_FIELD_NUMBER: builtins.int
    WORD_COUNT_FIELD_NUMBER: builtins.int
    SUMMARY_FIELD_NUMBER: builtins.int
    NOSEYPARKER_FIELD_NUMBER: builtins.int
    object_id: builtins.str
    """the Nemesis UUID referencing the plaintext file in S3"""
    @property
    def enrichments_success(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Enrichments that ran and succeeded"""
    @property
    def enrichments_failure(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Enrichments that ran but failed"""
    originating_object_id: builtins.str
    """the Nemesis UUID referencing the original file the plaintext was extracted from"""
    originating_object_converted_pdf: builtins.str
    """if the originating document was converted to a PDF, this is the Nemesis object_id/UUID referring to that file in S3"""
    originating_object_path: builtins.str
    """the path of the originating downloaded file/object, if it exists"""
    originating_object_size: builtins.int
    """the size (in bytes) of the originating file/object, if it exists"""
    size: builtins.int
    """size of the raw extracted text, in bytes"""
    word_count: builtins.int
    """number of individual tokens"""
    summary: builtins.str
    """short summary of the text"""
    @property
    def noseyparker(self) -> global___NoseyParker:
        """any NoseyParker results (including hashes) for the plaintext"""
    def __init__(
        self,
        *,
        object_id: builtins.str = ...,
        enrichments_success: collections.abc.Iterable[builtins.str] | None = ...,
        enrichments_failure: collections.abc.Iterable[builtins.str] | None = ...,
        originating_object_id: builtins.str = ...,
        originating_object_converted_pdf: builtins.str = ...,
        originating_object_path: builtins.str = ...,
        originating_object_size: builtins.int = ...,
        size: builtins.int = ...,
        word_count: builtins.int = ...,
        summary: builtins.str = ...,
        noseyparker: global___NoseyParker | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["noseyparker", b"noseyparker"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["enrichments_failure", b"enrichments_failure", "enrichments_success", b"enrichments_success", "noseyparker", b"noseyparker", "object_id", b"object_id", "originating_object_converted_pdf", b"originating_object_converted_pdf", "originating_object_id", b"originating_object_id", "originating_object_path", b"originating_object_path", "originating_object_size", b"originating_object_size", "size", b"size", "summary", b"summary", "word_count", b"word_count"]) -> None: ...

global___FileDataPlaintext = FileDataPlaintext

@typing_extensions.final
class FileDataPlaintextMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___Metadata: ...
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FileDataPlaintext]: ...
    def __init__(
        self,
        *,
        metadata: global___Metadata | None = ...,
        data: collections.abc.Iterable[global___FileDataPlaintext] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "metadata", b"metadata"]) -> None: ...

global___FileDataPlaintextMessage = FileDataPlaintextMessage

@typing_extensions.final
class FileDataPlaintextChunkMessage(google.protobuf.message.Message):
    """message for text chunks extracted from a FileDataPlaintext document
     has simplified metadata since it goes straight back to the NLP service after extraction
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CHUNK_SIZE_FIELD_NUMBER: builtins.int
    TEXT_FIELD_NUMBER: builtins.int
    PLAINTEXT_OBJECT_ID_FIELD_NUMBER: builtins.int
    ORIGINATING_OBJECT_ID_FIELD_NUMBER: builtins.int
    ORIGINATING_OBJECT_PATH_FIELD_NUMBER: builtins.int
    chunk_size: builtins.int
    """length of the chunk size, in characters"""
    text: builtins.str
    """the raw text of the chunk"""
    plaintext_object_id: builtins.str
    """the Nemesis UUID referencing the plaintext file the chunk came from"""
    originating_object_id: builtins.str
    """the Nemesis UUID referencing the original file the plaintext was extracted from"""
    originating_object_path: builtins.str
    """the path of the originating downloaded file/object the plaintext whole originated from, if it exists"""
    def __init__(
        self,
        *,
        chunk_size: builtins.int = ...,
        text: builtins.str = ...,
        plaintext_object_id: builtins.str = ...,
        originating_object_id: builtins.str = ...,
        originating_object_path: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["chunk_size", b"chunk_size", "originating_object_id", b"originating_object_id", "originating_object_path", b"originating_object_path", "plaintext_object_id", b"plaintext_object_id", "text", b"text"]) -> None: ...

global___FileDataPlaintextChunkMessage = FileDataPlaintextChunkMessage

@typing_extensions.final
class FileDataSourcecode(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OBJECT_ID_FIELD_NUMBER: builtins.int
    ORIGINATING_OBJECT_ID_FIELD_NUMBER: builtins.int
    PATH_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    EXTENSION_FIELD_NUMBER: builtins.int
    LANGUAGE_FIELD_NUMBER: builtins.int
    SIZE_FIELD_NUMBER: builtins.int
    object_id: builtins.str
    """the Nemesis UUID referencing the source code file in S3"""
    originating_object_id: builtins.str
    """If the file was extracted from another existing file in Nemesis (e.g., a zip or jar),
      this optional field is the Nemesis UUID referencing the original file
    """
    path: builtins.str
    """The path must be in a UNC, file system, or mapped path format. File system and mapped paths must be
    absolute and use forward slashes for separators (e.g. /).
    """
    name: builtins.str
    """The base file name"""
    extension: builtins.str
    """The file extension"""
    language: builtins.str
    """Language for the source code file"""
    size: builtins.int
    """Size of the file, in bytes"""
    def __init__(
        self,
        *,
        object_id: builtins.str = ...,
        originating_object_id: builtins.str = ...,
        path: builtins.str = ...,
        name: builtins.str = ...,
        extension: builtins.str = ...,
        language: builtins.str = ...,
        size: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["extension", b"extension", "language", b"language", "name", b"name", "object_id", b"object_id", "originating_object_id", b"originating_object_id", "path", b"path", "size", b"size"]) -> None: ...

global___FileDataSourcecode = FileDataSourcecode

@typing_extensions.final
class FileDataSourcecodeMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___Metadata: ...
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FileDataSourcecode]: ...
    def __init__(
        self,
        *,
        metadata: global___Metadata | None = ...,
        data: collections.abc.Iterable[global___FileDataSourcecode] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "metadata", b"metadata"]) -> None: ...

global___FileDataSourcecodeMessage = FileDataSourcecodeMessage

@typing_extensions.final
class Process(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    COMMAND_LINE_FIELD_NUMBER: builtins.int
    FILE_NAME_FIELD_NUMBER: builtins.int
    PROCESS_ID_FIELD_NUMBER: builtins.int
    PARENT_PROCESS_ID_FIELD_NUMBER: builtins.int
    ARCH_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    MEMORY_FIELD_NUMBER: builtins.int
    TOKEN_FIELD_NUMBER: builtins.int
    name: builtins.str
    """The name of the process"""
    command_line: builtins.str
    """The current command line information"""
    file_name: builtins.str
    """If known, the file that was executed"""
    process_id: builtins.int
    """Process id"""
    parent_process_id: builtins.int
    """Parent process id"""
    arch: builtins.str
    """Architecture of the process"""
    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """When the process was started"""
    memory: builtins.int
    """The amount of memory used by the process, in bytes"""
    @property
    def token(self) -> global___Token:
        """If present, Windows token information"""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        command_line: builtins.str = ...,
        file_name: builtins.str = ...,
        process_id: builtins.int = ...,
        parent_process_id: builtins.int = ...,
        arch: builtins.str = ...,
        start_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        memory: builtins.int = ...,
        token: global___Token | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["start_time", b"start_time", "token", b"token"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["arch", b"arch", "command_line", b"command_line", "file_name", b"file_name", "memory", b"memory", "name", b"name", "parent_process_id", b"parent_process_id", "process_id", b"process_id", "start_time", b"start_time", "token", b"token"]) -> None: ...

global___Process = Process

@typing_extensions.final
class ProcessMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___Metadata: ...
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Process]: ...
    def __init__(
        self,
        *,
        metadata: global___Metadata | None = ...,
        data: collections.abc.Iterable[global___Process] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "metadata", b"metadata"]) -> None: ...

global___ProcessMessage = ProcessMessage

@typing_extensions.final
class NetworkAddressIngestion(google.protobuf.message.Message):
    """///////////////////////////////////////////////////

    Not yet used

    ///////////////////////////////////////////////////

    Addresses that may be used to refer to the host the agent is running on or a
    network resource on the host. Addresses are expected to conform to the public
    standard for the address type but there is no verification of this. As an
    example, ethernet addresses are expected to use a hyphen as a separator
    instead of a colon as per IEEE 802.3 but this is not verified.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ADDRESS_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    NIC_FIELD_NUMBER: builtins.int
    address: builtins.str
    """Case sensitive address"""
    type: builtins.str
    """Case insensitive name for the address type
    TODO: Make into an enum: ipv4, ipv6, mac, host, netbios, spn, ethernet
    """
    nic: builtins.str
    """Name or id for a network interface card"""
    def __init__(
        self,
        *,
        address: builtins.str = ...,
        type: builtins.str = ...,
        nic: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["address", b"address", "nic", b"nic", "type", b"type"]) -> None: ...

global___NetworkAddressIngestion = NetworkAddressIngestion

@typing_extensions.final
class NetworkAddressIngestionMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___Metadata: ...
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NetworkAddressIngestion]: ...
    def __init__(
        self,
        *,
        metadata: global___Metadata | None = ...,
        data: collections.abc.Iterable[global___NetworkAddressIngestion] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "metadata", b"metadata"]) -> None: ...

global___NetworkAddressIngestionMessage = NetworkAddressIngestionMessage

@typing_extensions.final
class RouteDataIngestion(google.protobuf.message.Message):
    """Network routing rules for the host the agent is running on. The network mask
    must be specified separately from the destination address. Addresses and
    network masks are also expected to conform to the public standard for the
    address type but there is no verification of this.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DESTINATION_FIELD_NUMBER: builtins.int
    GATEWAY_FIELD_NUMBER: builtins.int
    MASK_FIELD_NUMBER: builtins.int
    NIC_FIELD_NUMBER: builtins.int
    PROTOCOL_FIELD_NUMBER: builtins.int
    destination: builtins.str
    """Case sensitive address"""
    gateway: builtins.str
    """Address of the routing host"""
    mask: builtins.str
    """Network mask for the destination address"""
    nic: builtins.str
    """Name or id for a network interface card"""
    protocol: builtins.str
    """Protocol of the route rule"""
    def __init__(
        self,
        *,
        destination: builtins.str = ...,
        gateway: builtins.str = ...,
        mask: builtins.str = ...,
        nic: builtins.str = ...,
        protocol: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["destination", b"destination", "gateway", b"gateway", "mask", b"mask", "nic", b"nic", "protocol", b"protocol"]) -> None: ...

global___RouteDataIngestion = RouteDataIngestion

@typing_extensions.final
class RouteDataIngestionMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___Metadata: ...
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RouteDataIngestion]: ...
    def __init__(
        self,
        *,
        metadata: global___Metadata | None = ...,
        data: collections.abc.Iterable[global___RouteDataIngestion] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "metadata", b"metadata"]) -> None: ...

global___RouteDataIngestionMessage = RouteDataIngestionMessage

@typing_extensions.final
class UserTime(google.protobuf.message.Message):
    """Current time information about the host the agent is running on. The
    subparameters of the Users list must delimited by spaces in CSV submissions.
    Note that all date time parameters are expected to be in UTC from the Unix
    epoch regardless of what time zone the host uses.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_FIELD_NUMBER: builtins.int
    SESSION_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    user: builtins.str
    session: builtins.int
    time: builtins.int
    def __init__(
        self,
        *,
        user: builtins.str = ...,
        session: builtins.int = ...,
        time: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["session", b"session", "time", b"time", "user", b"user"]) -> None: ...

global___UserTime = UserTime

@typing_extensions.final
class TimeDataIngestion(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CURRENT_FIELD_NUMBER: builtins.int
    RUNTIME_FIELD_NUMBER: builtins.int
    USERS_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    @property
    def current(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Current time for the host"""
    runtime: builtins.int
    """How long the host has been running in seconds"""
    @property
    def users(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UserTime]:
        """List of users, their session, and their time logged on"""
    zone: builtins.str
    """The time zone that the host uses"""
    def __init__(
        self,
        *,
        current: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        runtime: builtins.int = ...,
        users: collections.abc.Iterable[global___UserTime] | None = ...,
        zone: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["current", b"current"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["current", b"current", "runtime", b"runtime", "users", b"users", "zone", b"zone"]) -> None: ...

global___TimeDataIngestion = TimeDataIngestion

@typing_extensions.final
class TimeDataIngestionMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___Metadata: ...
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TimeDataIngestion]: ...
    def __init__(
        self,
        *,
        metadata: global___Metadata | None = ...,
        data: collections.abc.Iterable[global___TimeDataIngestion] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "metadata", b"metadata"]) -> None: ...

global___TimeDataIngestionMessage = TimeDataIngestionMessage
