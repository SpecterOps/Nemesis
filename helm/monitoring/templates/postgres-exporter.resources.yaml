apiVersion: v1
kind: Service
metadata:
  labels:
    app: postgres-exporter
  name: postgres-exporter
spec:
  type: NodePort
  ports:
    - name: "9187"
      port: 9187
      targetPort: 9187
      nodePort: {{ .Values.postgresExporter.nodePort }}
  selector:
    app: postgres-exporter
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-exporter
  template:
    metadata:
      labels:
        app: postgres-exporter
    spec:
      serviceAccountName: default
      restartPolicy: Always
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - image: "{{ .Values.postgresExporter.image.repository }}:{{ .Values.postgresExporter.image.tag }}"
          imagePullPolicy: {{ .Values.postgresExporter.image.pullPolicy }}
          name: postgres-exporter
          command:
            - /bin/postgres_exporter
            - --web.listen-address=:9187
            - --web.telemetry-path=/metrics
          env:
            - name: DATA_SOURCE_URI
              value: postgres?sslmode=disable
            - name: DATA_SOURCE_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.existingSecret }}
                  key: postgres-user
            - name: DATA_SOURCE_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.existingSecret }}
                  key: postgres-password
          ports:
            - containerPort: 9187
              name: http
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 1
            timeoutSeconds: 5
            periodSeconds: 5
