global:
  scrape_interval: 5s
  evaluation_interval: 5s
rule_files:
  - /etc/prometheus/prometheus.rules
alerting:
  alertmanagers:
  - scheme: http
    static_configs:
    - targets:
      - {{ .Values.prometheus.connections.alertmanager | quote }}

scrape_configs:
  - job_name: 'prometheus'
    scrape_interval: 5s
    static_configs:
    - targets: ['127.0.0.1:9090']

  - job_name: 'node-exporter'
    kubernetes_sd_configs:
      - role: endpoints
    relabel_configs:
    - source_labels: [__meta_kubernetes_endpoints_name]
      regex: 'node-exporter'
      action: keep

  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
    - role: endpoints
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
    - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
      action: keep
      regex: default;kubernetes;https

  - job_name: 'kubernetes-nodes'
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
    - role: node
    relabel_configs:
    - action: labelmap
      regex: __meta_kubernetes_node_label_(.+)
    - target_label: __address__
      replacement: {{ .Values.prometheus.connections.kubernetes | quote }}
    - source_labels: [__meta_kubernetes_node_name]
      regex: (.+)
      target_label: __metrics_path__
      replacement: /api/v1/nodes/${1}/proxy/metrics

  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
    - role: pod
    relabel_configs:
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
    - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
      action: replace
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
      target_label: __address__
    - action: labelmap
      regex: __meta_kubernetes_pod_label_(.+)
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: kubernetes_namespace
    - source_labels: [__meta_kubernetes_pod_name]
      action: replace
      target_label: kubernetes_pod_name

  - job_name: 'kube-state-metrics'
    static_configs:
      - targets:
        - {{ .Values.prometheus.connections.kubeStateMetrics | quote }}

  - job_name: 'kubernetes-cadvisor'
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
    - role: node
    relabel_configs:
    - action: labelmap
      regex: __meta_kubernetes_node_label_(.+)
    - target_label: __address__
      replacement: {{ .Values.prometheus.connections.kubernetes | quote }}
    - source_labels: [__meta_kubernetes_node_name]
      regex: (.+)
      target_label: __metrics_path__
      replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

  - job_name: 'kubernetes-service-endpoints'
    kubernetes_sd_configs:
    - role: endpoints
    relabel_configs:
    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
      action: replace
      target_label: __scheme__
      regex: (https?)
    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
    - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
      action: replace
      target_label: __address__
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
    - action: labelmap
      regex: __meta_kubernetes_service_label_(.+)
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: kubernetes_namespace
    - source_labels: [__meta_kubernetes_service_name]
      action: replace
      target_label: kubernetes_name

  # service metrics

  - job_name: 'elasticsearch'
    scrape_interval: 5s
    static_configs:
    - targets:
      - {{ .Values.prometheus.connections.elasticsearchExporter | quote }}

  - job_name: 'gotenberg'
    scrape_interval: 5s
    static_configs:
    - targets:
      - {{ .Values.prometheus.connections.gotenberg | quote }}
    metrics_path: /prometheus/metrics

  - job_name: 'passwordcracker'
    scrape_interval: 5s
    static_configs:
    - targets:
      - {{ .Values.prometheus.connections.passwordcracker | quote }}

  - job_name: 'postgres'
    scrape_interval: 5s
    static_configs:
    - targets:
      - {{ .Values.prometheus.connections.postgresExporter | quote }}

  - job_name: 'nlp'
    scrape_interval: 5s
    static_configs:
    - targets:
      - {{ .Values.prometheus.connections.nlp | quote }}

  - job_name: 'enrichment'
    scrape_interval: 5s
    static_configs:
    - targets:
      - {{ .Values.prometheus.connections.enrichment | quote }}

  # # TODO: implement metrics export in our source
  # - job_name: 'dashboard'
  #   scrape_interval: 5s
  #   static_configs:
  #   - targets: ['dashboard.default.svc.cluster.local:8601']

  # # TODO: implement metrics export in our source
  # - job_name: 'dotnet'
  #   scrape_interval: 5s
  #   static_configs:
  #   - targets: ['dotnet.default.svc.cluster.local:9800']

  # # TODO: is it possible to implement a metrics export ?
  # - job_name: 'tensorflow-serving'
  #   scrape_interval: 5s
  #   static_configs:
  #   - targets: ['tensorflow-serving.default.svc.cluster.local:8501']

  # # TODO: is it possible to implement a metrics export ?
  # - job_name: 'tika'
  #   scrape_interval: 5s
  #   static_configs:
  #   - targets: ['tika.default.svc.cluster.local:9998']