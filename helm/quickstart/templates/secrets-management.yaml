apiVersion: v1
kind: ServiceAccount
metadata:
  name: secret-manager
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: secret-manager-role
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch", "create", "delete"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "create", "delete"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: secret-manager-rolebinding
subjects:
- kind: ServiceAccount
  name: secret-manager
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: secret-manager-role
  apiGroup: rbac.authorization.k8s.io

{{ if .Values.tls.enable }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tls-cert-generator-script
data:
  generate-and-apply-tls.sh: |
    #!/bin/sh
    set -e  # Exit immediately if a command exits with a non-zero status.

    # Generate TLS certificate and key
    openssl req -x509 -newkey rsa:4096 -sha256 -nodes -keyout /tmp/tls.key -out /tmp/tls.crt -subj "/CN=nemesis.local" -days 365 -addext "subjectAltName=DNS:nemesis.local"

    # Create the secret in the target namespace
    kubectl create secret generic ${TLS_SECRET_NAME} --from-file=tls.crt=/tmp/tls.crt --from-file=tls.key=/tmp/tls.key -n {{ .Release.Namespace }} || true
---
apiVersion: batch/v1
kind: Job
metadata:
  name: tls-cert-generator-job
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    spec:
      serviceAccountName: secret-manager
      containers:
      - name: tls-generator
        image: bitnami/kubectl:latest
        command: ["/bin/sh", "/scripts/generate-and-apply-tls.sh"]
        env:
          - name: TLS_SECRET_NAME
            value: {{ .Values.tls.secretName }}
        volumeMounts:
        - name: script-volume
          mountPath: /scripts
      restartPolicy: Never
      volumes:
      - name: script-volume
        configMap:
          name: tls-cert-generator-script
{{ end }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: pre-delete-job
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    spec:
      serviceAccountName: secret-manager
      containers:
      - name: pre-delete
        image: bitnami/kubectl:latest
        command: ["kubectl", "delete", "secret", {{ .Values.tls.secretName }}, "--ignore-not-found"]
      restartPolicy: Never