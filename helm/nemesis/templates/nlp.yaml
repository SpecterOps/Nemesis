---
apiVersion: v1
kind: Service
metadata:
  name: nlp
  labels:
    app: nlp
    component: enrichment-pipeline
spec:
  type: NodePort
  ports:
    - name: "9803"
      port: 9803
      targetPort: 9803
      nodePort: {{ .Values.nlp.nodePort }}
    - name: "8000"
      port: 8000
      targetPort: 8000
      nodePort: {{ .Values.nlp.prometheusNodePort }}
  selector:
    app: nlp
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nlp-ingress
  annotations:
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: {{ .Values.operation.basicAuthExistingSecret }}
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: /nlp(/|$)(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: nlp
                port:
                  number: 9803
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nlp
  labels:
    app: nlp
    component: enrichment-pipeline
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nlp
  strategy: {}
  template:
    metadata:
      labels:
        app: nlp
        component: enrichment-pipeline
    spec:
      containers:
        - env:
            - name: ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: operation-config
                  key: environment
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: operation-config
                  key: log-level
            - name: PROMETHEUS_PORT
              value: "8000"
            - name: PROMETHEUS_DISABLE_CREATED_SERIES
              value: "True"
            - name: ASSESSMENT_ID
              valueFrom:
                configMapKeyRef:
                  name: operation-config
                  key: assessment-id
            - name: AWS_BUCKET
              valueFrom:
                configMapKeyRef:
                  name: aws-config
                  key: aws-bucket
            - name: AWS_DEFAULT_REGION
              valueFrom:
                configMapKeyRef:
                  name: aws-config
                  key: aws-default-region
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.aws.existingSecret }}
                  key: aws-access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.aws.existingSecret }}
                  key: aws-secret-key
            - name: AWS_KMS_KEY_ALIAS
              valueFrom:
                configMapKeyRef:
                  name: aws-config
                  key: aws-kms-key-alias
            - name: DATA_DOWNLOAD_DIR
              value: "/tmp"

            - name: STORAGE_PROVIDER
              valueFrom:
                configMapKeyRef:
                  name: operation-config
                  key: storage_provider
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.minio.existingSecret }}
                  key: root-user
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.minio.existingSecret }}
                  key: root-password
            - name: RABBITMQ_CONNECTION_URI
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.rabbitmq.existingSecret }}
                  key: rabbitmq-connectionuri
            - name: ELASTIC_INDEX_NAME
              value: "text_embeddings"
            - name: EMBEDDING_MODEL
              # value: "TaylorAI/bge-micro-v2" # ranked lowest but fastest
              value: "TaylorAI/gte-tiny"  # ranked higher but slower
              # value: "thenlper/gte-small" # ranked highest but slowest
            - name: TEXT_CHUNK_SIZE
              value: "510"
            - name: PLAINTEXT_SIZE_LIMIT
              value: "50000000" # max number of bytes for a plaintext doc to prevent indexing of embeddings
            # by default NORMALIZE_EMBEDDINGS should normally be false since we're using Cosine similarity
            #   that only considers vector direction and not magnitude, so we shouldn't
            #   worry about normalizing the vectors
            - name: NORMALIZE_EMBEDDINGS
              value: "False"
            - name: ELASTICSEARCH_URL
              value: http://nemesis-es-internal-http:9200/
            - name: ELASTICSEARCH_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.elasticsearch.existingSecret }}
                  key: username
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.elasticsearch.existingSecret }}
                  key: password
            - name: ELASTIC_CONNECTION_URI
              value: "http://$(ELASTICSEARCH_USER):$(ELASTICSEARCH_PASSWORD)@nemesis-es-internal-http:9200"

          image: {{ .Values.nlp.image.repository }}:{{ .Values.nlp.image.tag }}
          imagePullPolicy: {{ .Values.nlp.image.pullPolicy }}
          name: nemesis-nlp
          ports:
            - containerPort: 9803
              name: nlp-http
            # - containerPort: 9801
            #   name: dotnet-prom
          resources: {{ toYaml .Values.nlp.resources | nindent 12 }}
          readinessProbe:
            httpGet:
              path: /ready
              port: nlp-http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 10

      restartPolicy: Always